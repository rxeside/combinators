(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :
  typeof define === 'function' && define.amd ? define(['exports'], factory) :
  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.VKIDSDK = {}));
})(this, (function (exports) { 'use strict';

  function _class_call_check$a(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
      }
  }
  function _defineProperties$9(target, props) {
      for(var i = 0; i < props.length; i++){
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor) descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
      }
  }
  function _create_class$9(Constructor, protoProps, staticProps) {
      if (protoProps) _defineProperties$9(Constructor.prototype, protoProps);
      if (staticProps) _defineProperties$9(Constructor, staticProps);
      return Constructor;
  }
  function _define_property$j(obj, key, value) {
      if (key in obj) {
          Object.defineProperty(obj, key, {
              value: value,
              enumerable: true,
              configurable: true,
              writable: true
          });
      } else {
          obj[key] = value;
      }
      return obj;
  }
  var DataService = /*#__PURE__*/ function() {
      function DataService() {
          var _this = this;
          _class_call_check$a(this, DataService);
          _define_property$j(this, "promise", void 0);
          _define_property$j(this, "callback", void 0);
          _define_property$j(this, "resolve", void 0);
          _define_property$j(this, "reject", void 0);
          _define_property$j(this, "setCallback", function(callback) {
              _this.callback = callback;
          });
          _define_property$j(this, "removeCallback", function() {
              _this.callback = null;
          });
          _define_property$j(this, "sendSuccess", function(value) {
              _this.resolve(value);
              _this.callback && _this.callback();
          });
          _define_property$j(this, "sendError", function(value) {
              _this.reject(value);
              _this.callback && _this.callback();
          });
          this.promise = new Promise(function(resolve, reject) {
              _this.resolve = resolve;
              _this.reject = reject;
          });
      }
      _create_class$9(DataService, [
          {
              key: "value",
              get: function get() {
                  return this.promise;
              }
          }
      ]);
      return DataService;
  }();

  exports.AuthErrorCode = void 0;
  (function(AuthErrorCode) {
      AuthErrorCode[AuthErrorCode[/**
     * Неизвестное событие
     */ "EventNotSupported"] = 100] = "EventNotSupported";
      AuthErrorCode[AuthErrorCode[/**
     * Новая вкладка не создалась
     */ "CannotCreateNewTab"] = 101] = "CannotCreateNewTab";
      AuthErrorCode[AuthErrorCode[/**
     * Новая вкладка была закрыта
     */ "NewTabHasBeenClosed"] = 102] = "NewTabHasBeenClosed";
      AuthErrorCode[AuthErrorCode[/**
     * Авторизация завершилась ошибкой
     */ "AuthorizationFailed"] = 103] = "AuthorizationFailed";
  })(exports.AuthErrorCode || (exports.AuthErrorCode = {}));

  function _define_property$i(obj, key, value) {
      if (key in obj) {
          Object.defineProperty(obj, key, {
              value: value,
              enumerable: true,
              configurable: true,
              writable: true
          });
      } else {
          obj[key] = value;
      }
      return obj;
  }
  var AUTH_RESPONSE_TOKEN = "silent_token";
  var _obj$8;
  var AUTH_ERROR_TEXT = (_obj$8 = {}, _define_property$i(_obj$8, exports.AuthErrorCode.EventNotSupported, "Event is not supported"), _define_property$i(_obj$8, exports.AuthErrorCode.CannotCreateNewTab, "Cannot create new tab. Try checking your browser settings"), _define_property$i(_obj$8, exports.AuthErrorCode.NewTabHasBeenClosed, "New tab has been closed"), _define_property$i(_obj$8, exports.AuthErrorCode.AuthorizationFailed, "Authorization failed with an error"), _obj$8);
  var AUTH_VK_CONNECT_RESPONSE = "vk_connect_response";

  function _assert_this_initialized$6(self) {
      if (self === void 0) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
  }
  function _class_call_check$9(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
      }
  }
  function _define_property$h(obj, key, value) {
      if (key in obj) {
          Object.defineProperty(obj, key, {
              value: value,
              enumerable: true,
              configurable: true,
              writable: true
          });
      } else {
          obj[key] = value;
      }
      return obj;
  }
  function _get_prototype_of$6(o) {
      _get_prototype_of$6 = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o) {
          return o.__proto__ || Object.getPrototypeOf(o);
      };
      return _get_prototype_of$6(o);
  }
  function _inherits$6(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
              value: subClass,
              writable: true,
              configurable: true
          }
      });
      if (superClass) _set_prototype_of$6(subClass, superClass);
  }
  function _possible_constructor_return$6(self, call) {
      if (call && (_type_of$7(call) === "object" || typeof call === "function")) {
          return call;
      }
      return _assert_this_initialized$6(self);
  }
  function _set_prototype_of$6(o, p) {
      _set_prototype_of$6 = Object.setPrototypeOf || function setPrototypeOf(o, p) {
          o.__proto__ = p;
          return o;
      };
      return _set_prototype_of$6(o, p);
  }
  function _type_of$7(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
  }
  function _is_native_reflect_construct$6() {
      if (typeof Reflect === "undefined" || !Reflect.construct) return false;
      if (Reflect.construct.sham) return false;
      if (typeof Proxy === "function") return true;
      try {
          Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
          return true;
      } catch (e) {
          return false;
      }
  }
  function _create_super$6(Derived) {
      var hasNativeReflectConstruct = _is_native_reflect_construct$6();
      return function _createSuperInternal() {
          var Super = _get_prototype_of$6(Derived), result;
          if (hasNativeReflectConstruct) {
              var NewTarget = _get_prototype_of$6(this).constructor;
              result = Reflect.construct(Super, arguments, NewTarget);
          } else {
              result = Super.apply(this, arguments);
          }
          return _possible_constructor_return$6(this, result);
      };
  }
  var AuthDataService = /*#__PURE__*/ function(DataService) {
      _inherits$6(AuthDataService, DataService);
      var _super = _create_super$6(AuthDataService);
      function AuthDataService() {
          _class_call_check$9(this, AuthDataService);
          var _this;
          _this = _super.apply(this, arguments);
          // TODO: Типизировать payload
          _define_property$h(_assert_this_initialized$6(_this), "sendSuccessData", function(payload) {
              _this.sendSuccess({
                  type: payload.type,
                  token: payload.token,
                  ttl: payload.ttl
              });
          });
          _define_property$h(_assert_this_initialized$6(_this), "sendNewTabHasBeenClosed", function() {
              _this.sendError({
                  code: exports.AuthErrorCode.NewTabHasBeenClosed,
                  text: AUTH_ERROR_TEXT[exports.AuthErrorCode.NewTabHasBeenClosed]
              });
          });
          // TODO: Типизировать details
          _define_property$h(_assert_this_initialized$6(_this), "sendAuthorizationFailed", function(details) {
              _this.sendError({
                  code: exports.AuthErrorCode.AuthorizationFailed,
                  text: AUTH_ERROR_TEXT[exports.AuthErrorCode.AuthorizationFailed],
                  details: details
              });
          });
          _define_property$h(_assert_this_initialized$6(_this), "sendEventNotSupported", function() {
              _this.sendError({
                  code: exports.AuthErrorCode.EventNotSupported,
                  text: AUTH_ERROR_TEXT[exports.AuthErrorCode.EventNotSupported]
              });
          });
          _define_property$h(_assert_this_initialized$6(_this), "sendCannotCreateNewTab", function() {
              _this.sendError({
                  code: exports.AuthErrorCode.CannotCreateNewTab,
                  text: AUTH_ERROR_TEXT[exports.AuthErrorCode.CannotCreateNewTab]
              });
          });
          return _this;
      }
      return AuthDataService;
  }(DataService);

  // @ts-ignore-next-line пробрасываем версию из package.json в rollup.config
  var VERSION = "1.1.0";
  // @ts-ignore-next-line пробрасываем тип сборки из rollup.config
  var DOMAIN = "vk.com";
  var LOGIN_DOMAIN = "login.".concat(DOMAIN);
  var OAUTH_DOMAIN = "oauth.".concat(DOMAIN);
  var VKID_DOMAIN = "id.".concat(DOMAIN);

  exports.ConfigAuthMode = void 0;
  (function(ConfigAuthMode) {
      ConfigAuthMode["Redirect"] = "redirect";
      ConfigAuthMode["InNewTab"] = "new_tab";
  })(exports.ConfigAuthMode || (exports.ConfigAuthMode = {}));

  function _class_call_check$8(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
      }
  }
  function _defineProperties$8(target, props) {
      for(var i = 0; i < props.length; i++){
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor) descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
      }
  }
  function _create_class$8(Constructor, protoProps, staticProps) {
      if (protoProps) _defineProperties$8(Constructor.prototype, protoProps);
      if (staticProps) _defineProperties$8(Constructor, staticProps);
      return Constructor;
  }
  function _define_property$g(obj, key, value) {
      if (key in obj) {
          Object.defineProperty(obj, key, {
              value: value,
              enumerable: true,
              configurable: true,
              writable: true
          });
      } else {
          obj[key] = value;
      }
      return obj;
  }
  function _object_spread$5(target) {
      for(var i = 1; i < arguments.length; i++){
          var source = arguments[i] != null ? arguments[i] : {};
          var ownKeys = Object.keys(source);
          if (typeof Object.getOwnPropertySymbols === "function") {
              ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                  return Object.getOwnPropertyDescriptor(source, sym).enumerable;
              }));
          }
          ownKeys.forEach(function(key) {
              _define_property$g(target, key, source[key]);
          });
      }
      return target;
  }
  var Config = /*#__PURE__*/ function() {
      function Config() {
          _class_call_check$8(this, Config);
          _define_property$g(this, "store", {
              app: 0,
              redirectUrl: "",
              mode: exports.ConfigAuthMode.Redirect,
              __loginDomain: LOGIN_DOMAIN,
              __oauthDomain: OAUTH_DOMAIN,
              __vkidDomain: VKID_DOMAIN
          });
      }
      _create_class$8(Config, [
          {
              key: "set",
              value: function set(config) {
                  this.store = _object_spread$5({}, this.store, config);
                  return this;
              }
          },
          {
              key: "get",
              value: function get() {
                  return this.store;
              }
          }
      ]);
      return Config;
  }();

  var ALLOWED_DOMAINS = [
      "vk.com",
      "vk.ru"
  ];
  var isDomainAllowed = function(origin) {
      return !!ALLOWED_DOMAINS.find(function(domain) {
          return origin.endsWith(domain);
      });
  };

  var canUseDOM = !!(typeof window !== 'undefined' && window.document &&
  /* eslint-disable */
  window.document.createElement
  /* eslint-enable */
  );
  var canUseEventListeners = canUseDOM && !!window.addEventListener;

  function _typeof(o) {
    "@babel/helpers - typeof";

    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) {
      return typeof o;
    } : function (o) {
      return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
  }

  var noop = function noop() {}; // eslint-disable-line @typescript-eslint/no-empty-function
  function debounce(fn, delay) {
    var context = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : window;
    var timeout;
    var args;

    var later = function later() {
      return fn.apply(context, args);
    };

    return function () {
      for (var _len2 = arguments.length, a = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        a[_key2] = arguments[_key2];
      }

      args = a;
      clearTimeout(timeout);
      timeout = setTimeout(later, delay);
    };
  }

  var isPassiveEventsSupported = false;

  if (canUseEventListeners) {
    try {
      var options = Object.defineProperty({}, 'passive', {
        get: function get() {
          isPassiveEventsSupported = true;
        }
      });
      window.addEventListener('test', noop, options);
      window.removeEventListener('test', noop, options);
    } catch (e) {}
  }

  function detectSmoothScrollSupport() {
    if (!canUseDOM) {
      return false;
    }

    var isSupported = false;

    try {
      var div = document.createElement('div');
      div.scrollTo({
        top: 0,

        // @ts-ignore
        get behavior() {
          isSupported = true;
          return 'smooth';
        }

      });
    } catch (e) {}

    return isSupported;
  }

  detectSmoothScrollSupport();

  function _toPrimitive(input, hint) {
    if (_typeof(input) !== "object" || input === null) return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object") return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  }

  function _toPropertyKey(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  }

  function _defineProperty(obj, key, value) {
    key = _toPropertyKey(key);
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }
    return obj;
  }

  function ownKeys$4(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$4(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$4(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

  function parse(query) {
    if (typeof query !== 'string') {
      return {};
    }

    query = query.trim().replace(/^[?#&]/, '');

    if (!query) {
      return {};
    }

    var matches = /\?(.+)$/ig.exec(query);
    var str = matches ? matches[1] : query;
    return str.split('&').reduce(function (acc, item) {
      var param = item.split('=');

      if (param[1]) {
        acc[param[0]] = decodeURIComponent(param[1]);
      }

      return acc;
    }, {});
  }

  function stringify(data) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    if (_typeof(data) !== 'object' || data === null) {
      return '';
    }

    options = _objectSpread({
      encode: true
    }, options);

    var encode = function encode(value) {
      return options.encode ? encodeURIComponent(value) : String(value);
    };

    return Object.keys(data).reduce(function (acc, key) {
      var value = data[key];

      if (value === undefined) {
        return acc;
      }

      if (value === null) {
        if (!options.skipNull) {
          acc.push([encode(key), ''].join('='));
        }

        return acc;
      }

      if (Array.isArray(value)) {
        value.map(function (arrayItem) {
          acc.push("".concat(encode(key), "[]=").concat(encode(arrayItem)));
        }).join();
        return acc;
      }

      acc.push([encode(key), encode(value)].join('='));
      return acc;
    }, []).join('&');
  }

  var querystring = {
    parse: parse,
    stringify: stringify
  };

  let urlAlphabet =
    'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict';
  let customAlphabet = (alphabet, defaultSize = 21) => {
    return (size = defaultSize) => {
      let id = '';
      let i = size;
      while (i--) {
        id += alphabet[(Math.random() * alphabet.length) | 0];
      }
      return id
    }
  };
  let nanoid = (size = 21) => {
    let id = '';
    let i = size;
    while (i--) {
      id += urlAlphabet[(Math.random() * 64) | 0];
    }
    return id
  };

  var uuid = customAlphabet("qazwsxedcrfvtgbyhnujmikol", 6);

  function _define_property$f(obj, key, value) {
      if (key in obj) {
          Object.defineProperty(obj, key, {
              value: value,
              enumerable: true,
              configurable: true,
              writable: true
          });
      } else {
          obj[key] = value;
      }
      return obj;
  }
  function _object_spread$4(target) {
      for(var i = 1; i < arguments.length; i++){
          var source = arguments[i] != null ? arguments[i] : {};
          var ownKeys = Object.keys(source);
          if (typeof Object.getOwnPropertySymbols === "function") {
              ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                  return Object.getOwnPropertyDescriptor(source, sym).enumerable;
              }));
          }
          ownKeys.forEach(function(key) {
              _define_property$f(target, key, source[key]);
          });
      }
      return target;
  }
  function ownKeys$3(object, enumerableOnly) {
      var keys = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
          var symbols = Object.getOwnPropertySymbols(object);
          if (enumerableOnly) {
              symbols = symbols.filter(function(sym) {
                  return Object.getOwnPropertyDescriptor(object, sym).enumerable;
              });
          }
          keys.push.apply(keys, symbols);
      }
      return keys;
  }
  function _object_spread_props$3(target, source) {
      source = source != null ? source : {};
      if (Object.getOwnPropertyDescriptors) {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
      } else {
          ownKeys$3(Object(source)).forEach(function(key) {
              Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
          });
      }
      return target;
  }
  var getVKIDUrl = function(module, params, config) {
      var queryParams = _object_spread_props$3(_object_spread$4({}, params), {
          uuid: params.uuid || uuid(),
          v: VERSION,
          sdk_type: "vkid",
          app_id: config.app,
          redirect_uri: config.redirectUrl,
          redirect_state: config.state,
          debug: config.__debug ? 1 : null,
          localhost: config.__localhost ? 1 : null
      });
      var queryParamsString = querystring.stringify(queryParams, {
          skipNull: true
      });
      return "https://".concat(config.__vkidDomain, "/").concat(module, "?").concat(queryParamsString);
  };
  // TODO: добавить типы
  var getRedirectWithPayloadUrl = function(payload, config) {
      var url = "".concat(config.get().redirectUrl, "?payload=").concat(encodeURIComponent(JSON.stringify(payload)));
      if (config.get().state) {
          url += "&state=".concat(config.get().state);
      }
      return url;
  };

  function _class_call_check$7(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
      }
  }
  function _defineProperties$7(target, props) {
      for(var i = 0; i < props.length; i++){
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor) descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
      }
  }
  function _create_class$7(Constructor, protoProps, staticProps) {
      if (protoProps) _defineProperties$7(Constructor.prototype, protoProps);
      if (staticProps) _defineProperties$7(Constructor, staticProps);
      return Constructor;
  }
  function _define_property$e(obj, key, value) {
      if (key in obj) {
          Object.defineProperty(obj, key, {
              value: value,
              enumerable: true,
              configurable: true,
              writable: true
          });
      } else {
          obj[key] = value;
      }
      return obj;
  }
  var Auth = /*#__PURE__*/ function() {
      function Auth() {
          var _this = this;
          _class_call_check$7(this, Auth);
          _define_property$e(this, "uuid", void 0);
          _define_property$e(this, "dataService", void 0);
          _define_property$e(this, "opener", void 0);
          _define_property$e(this, "interval", void 0);
          _define_property$e(this, "close", function() {
              _this.opener && _this.opener.close();
          });
          _define_property$e(this, "handleMessage", function(param) {
              var origin = param.origin, source = param.source, data = param.data;
              if (source !== _this.opener || !_this.opener || !isDomainAllowed(origin)) {
                  return;
              }
              _this.unsubscribe();
              if (data.payload.error) {
                  _this.dataService.sendAuthorizationFailed(data.payload.error);
                  return;
              }
              if (data.action === AUTH_VK_CONNECT_RESPONSE + _this.uuid) {
                  _this.dataService.sendSuccessData(data.payload);
                  return;
              }
              _this.dataService.sendEventNotSupported();
          });
          _define_property$e(this, "handleInterval", function() {
              var _this_opener;
              if ((_this_opener = _this.opener) === null || _this_opener === void 0 ? void 0 : _this_opener.closed) {
                  _this.unsubscribe();
                  _this.dataService.sendNewTabHasBeenClosed();
              }
          });
          _define_property$e(this, "subscribe", function() {
              _this.interval = window.setInterval(_this.handleInterval, 1000);
              window.addEventListener("message", _this.handleMessage);
              _this.dataService.removeCallback();
          });
          _define_property$e(this, "unsubscribe", function() {
              window.removeEventListener("message", _this.handleMessage);
              clearInterval(_this.interval);
              _this.dataService.setCallback(_this.close);
          });
          _define_property$e(this, "loginInNewTab", function(url) {
              _this.dataService = new AuthDataService();
              _this.opener = window.open(url, "_blank");
              if (_this.opener) {
                  _this.subscribe();
              } else {
                  _this.dataService.sendCannotCreateNewTab();
              }
              _this.dataService.value.then(function(payload) {
                  _this.redirectWithPayload(payload);
              }).catch(console.error);
          });
          _define_property$e(this, "loginByRedirect", function(url) {
              location.assign(url);
          });
          _define_property$e(this, "login", function(params) {
              var _params, _params1, _params2, _params3;
              var config = Auth.__config.get();
              _this.uuid = uuid();
              var queryParams = {
                  uuid: _this.uuid,
                  lang_id: (_params = params) === null || _params === void 0 ? void 0 : _params.lang,
                  scheme: (_params1 = params) === null || _params1 === void 0 ? void 0 : _params1.scheme,
                  screen: (_params2 = params) === null || _params2 === void 0 ? void 0 : _params2.screen,
                  response_type: AUTH_RESPONSE_TOKEN,
                  action: ((_params3 = params) === null || _params3 === void 0 ? void 0 : _params3.action) ? btoa(JSON.stringify(params.action)) : undefined
              };
              var getUrl = function() {
                  return getVKIDUrl("auth", queryParams, config);
              };
              if (config.mode === exports.ConfigAuthMode.InNewTab) {
                  queryParams.origin = location.protocol + "//" + location.hostname;
                  _this.loginInNewTab(getUrl());
              } else {
                  _this.loginByRedirect(getUrl());
              }
          });
      }
      _create_class$7(Auth, [
          {
              key: "redirectWithPayload",
              value: // TODO: добавить типы
              function redirectWithPayload(payload) {
                  location.assign(getRedirectWithPayloadUrl(payload, Auth.__config));
              }
          }
      ]);
      return Auth;
  }();
  /**
     * @ignore
     */ _define_property$e(Auth, "__config", void 0);

  //      
  // An event handler can take an optional event argument
  // and should not return a value
                                            
                                                                 

  // An array of all currently registered event handlers for a type
                                              
                                                              
  // A map of event types and their corresponding event handlers.
                          
                                   
                                     
    

  /** Mitt: Tiny (~200b) functional event emitter / pubsub.
   *  @name mitt
   *  @returns {Mitt}
   */
  function mitt(all                 ) {
  	all = all || Object.create(null);

  	return {
  		/**
  		 * Register an event handler for the given type.
  		 *
  		 * @param  {String} type	Type of event to listen for, or `"*"` for all events
  		 * @param  {Function} handler Function to call in response to given event
  		 * @memberOf mitt
  		 */
  		on: function on(type        , handler              ) {
  			(all[type] || (all[type] = [])).push(handler);
  		},

  		/**
  		 * Remove an event handler for the given type.
  		 *
  		 * @param  {String} type	Type of event to unregister `handler` from, or `"*"`
  		 * @param  {Function} handler Handler function to remove
  		 * @memberOf mitt
  		 */
  		off: function off(type        , handler              ) {
  			if (all[type]) {
  				all[type].splice(all[type].indexOf(handler) >>> 0, 1);
  			}
  		},

  		/**
  		 * Invoke all handlers for the given type.
  		 * If present, `"*"` handlers are invoked after type-matched handlers.
  		 *
  		 * @param {String} type  The event type to invoke
  		 * @param {Any} [evt]  Any value (object is recommended and powerful), passed to each handler
  		 * @memberOf mitt
  		 */
  		emit: function emit(type        , evt     ) {
  			(all[type] || []).slice().map(function (handler) { handler(evt); });
  			(all['*'] || []).slice().map(function (handler) { handler(type, evt); });
  		}
  	};
  }

  function _class_call_check$6(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
      }
  }
  function _defineProperties$6(target, props) {
      for(var i = 0; i < props.length; i++){
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor) descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
      }
  }
  function _create_class$6(Constructor, protoProps, staticProps) {
      if (protoProps) _defineProperties$6(Constructor.prototype, protoProps);
      if (staticProps) _defineProperties$6(Constructor, staticProps);
      return Constructor;
  }
  function _define_property$d(obj, key, value) {
      if (key in obj) {
          Object.defineProperty(obj, key, {
              value: value,
              enumerable: true,
              configurable: true,
              writable: true
          });
      } else {
          obj[key] = value;
      }
      return obj;
  }
  var Dispatcher = /*#__PURE__*/ function() {
      function Dispatcher() {
          _class_call_check$6(this, Dispatcher);
          _define_property$d(this, "events", mitt());
      }
      _create_class$6(Dispatcher, [
          {
              key: "on",
              value: function on(event, handler) {
                  this.events.on(event, handler);
                  return this;
              }
          },
          {
              key: "off",
              value: function off(event, handler) {
                  this.events.off(event, handler);
                  return this;
              }
          }
      ]);
      return Dispatcher;
  }();

  var BridgeEvents;
  (function(BridgeEvents) {
      BridgeEvents["MESSAGE"] = "message";
      BridgeEvents["UNSUPPORTED_MESSAGE"] = "unsupported_message";
  })(BridgeEvents || (BridgeEvents = {}));

  function _assert_this_initialized$5(self) {
      if (self === void 0) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
  }
  function _class_call_check$5(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
      }
  }
  function _defineProperties$5(target, props) {
      for(var i = 0; i < props.length; i++){
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor) descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
      }
  }
  function _create_class$5(Constructor, protoProps, staticProps) {
      if (protoProps) _defineProperties$5(Constructor.prototype, protoProps);
      if (staticProps) _defineProperties$5(Constructor, staticProps);
      return Constructor;
  }
  function _define_property$c(obj, key, value) {
      if (key in obj) {
          Object.defineProperty(obj, key, {
              value: value,
              enumerable: true,
              configurable: true,
              writable: true
          });
      } else {
          obj[key] = value;
      }
      return obj;
  }
  function _get_prototype_of$5(o) {
      _get_prototype_of$5 = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o) {
          return o.__proto__ || Object.getPrototypeOf(o);
      };
      return _get_prototype_of$5(o);
  }
  function _inherits$5(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
              value: subClass,
              writable: true,
              configurable: true
          }
      });
      if (superClass) _set_prototype_of$5(subClass, superClass);
  }
  function _object_spread$3(target) {
      for(var i = 1; i < arguments.length; i++){
          var source = arguments[i] != null ? arguments[i] : {};
          var ownKeys = Object.keys(source);
          if (typeof Object.getOwnPropertySymbols === "function") {
              ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                  return Object.getOwnPropertyDescriptor(source, sym).enumerable;
              }));
          }
          ownKeys.forEach(function(key) {
              _define_property$c(target, key, source[key]);
          });
      }
      return target;
  }
  function _possible_constructor_return$5(self, call) {
      if (call && (_type_of$6(call) === "object" || typeof call === "function")) {
          return call;
      }
      return _assert_this_initialized$5(self);
  }
  function _set_prototype_of$5(o, p) {
      _set_prototype_of$5 = Object.setPrototypeOf || function setPrototypeOf(o, p) {
          o.__proto__ = p;
          return o;
      };
      return _set_prototype_of$5(o, p);
  }
  function _type_of$6(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
  }
  function _is_native_reflect_construct$5() {
      if (typeof Reflect === "undefined" || !Reflect.construct) return false;
      if (Reflect.construct.sham) return false;
      if (typeof Proxy === "function") return true;
      try {
          Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
          return true;
      } catch (e) {
          return false;
      }
  }
  function _create_super$5(Derived) {
      var hasNativeReflectConstruct = _is_native_reflect_construct$5();
      return function _createSuperInternal() {
          var Super = _get_prototype_of$5(Derived), result;
          if (hasNativeReflectConstruct) {
              var NewTarget = _get_prototype_of$5(this).constructor;
              result = Reflect.construct(Super, arguments, NewTarget);
          } else {
              result = Super.apply(this, arguments);
          }
          return _possible_constructor_return$5(this, result);
      };
  }
  var BRIDGE_MESSAGE_TYPE_SDK = "vk-sak-sdk";
  var Bridge = /*#__PURE__*/ function(Dispatcher) {
      _inherits$5(Bridge, Dispatcher);
      var _super = _create_super$5(Bridge);
      function Bridge(config) {
          _class_call_check$5(this, Bridge);
          var _this;
          _this = _super.call(this);
          _define_property$c(_assert_this_initialized$5(_this), "config", void 0);
          _this.config = config;
          _this.handleMessage = _this.handleMessage.bind(_assert_this_initialized$5(_this));
          // eslint-disable-next-line
          window.addEventListener("message", _this.handleMessage);
          return _this;
      }
      _create_class$5(Bridge, [
          {
              key: "destroy",
              value: function destroy() {
                  /* Clear references for memory */ // @ts-ignore-next-line Удаление происходит при десктруктуризации бриджа, поэтому это безопасно.
                  delete this.config;
                  // eslint-disable-next-line
                  window.removeEventListener("message", this.handleMessage);
              }
          },
          {
              key: "sendMessage",
              value: function sendMessage(message) {
                  var _this_config_iframe_contentWindow;
                  (_this_config_iframe_contentWindow = this.config.iframe.contentWindow) === null || _this_config_iframe_contentWindow === void 0 ? void 0 : _this_config_iframe_contentWindow.postMessage(_object_spread$3({
                      type: BRIDGE_MESSAGE_TYPE_SDK
                  }, message), this.config.origin);
              }
          },
          {
              key: "handleMessage",
              value: function handleMessage(event) {
                  var _event_data;
                  var isUnsupportedMessage = !this.config.origin || event.origin !== this.config.origin || event.source !== this.config.iframe.contentWindow || ((_event_data = event.data) === null || _event_data === void 0 ? void 0 : _event_data.type) !== BRIDGE_MESSAGE_TYPE_SDK;
                  if (isUnsupportedMessage) {
                      this.events.emit(BridgeEvents.UNSUPPORTED_MESSAGE, event.data);
                      return;
                  }
                  this.events.emit(BridgeEvents.MESSAGE, event.data);
              }
          }
      ]);
      return Bridge;
  }(Dispatcher);

  var validator = function(rules) {
      return function(target, propertyName, descriptor) {
          var originalMethod = descriptor.value;
          descriptor.value = function validator(params) {
              var _originalMethod;
              var rulesKeys = Object.keys(rules);
              var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;
              try {
                  var _loop = function() {
                      var key = _step.value;
                      var _validateHandlers;
                      var validateHandlers = rules[key];
                      (_validateHandlers = validateHandlers) === null || _validateHandlers === void 0 ? void 0 : _validateHandlers.forEach(function(handler) {
                          var _handler = handler(params[key]), result = _handler.result, makeError = _handler.makeError;
                          if (!result) {
                              throw new Error(makeError(key));
                          }
                      });
                  };
                  for(var _iterator = rulesKeys[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true)_loop();
              } catch (err) {
                  _didIteratorError = true;
                  _iteratorError = err;
              } finally{
                  try {
                      if (!_iteratorNormalCompletion && _iterator.return != null) {
                          _iterator.return();
                      }
                  } finally{
                      if (_didIteratorError) {
                          throw _iteratorError;
                      }
                  }
              }
              return (_originalMethod = originalMethod) === null || _originalMethod === void 0 ? void 0 : _originalMethod.apply(this, arguments);
          };
      };
  };

  function _type_of$5(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
  }
  var isRequired = function(param) {
      var result = true;
      if (typeof param === "string" && param.trim() === "" || param === undefined || param == null) {
          result = false;
      }
      return {
          result: result,
          makeError: function(valueName) {
              return "".concat(valueName, " is required parameter");
          }
      };
  };
  var isNumber = function(param) {
      return {
          result: [
              "number",
              "string"
          ].includes(typeof param === "undefined" ? "undefined" : _type_of$5(param)) && !isNaN(parseInt(param)),
          makeError: function(valueName) {
              return "".concat(valueName, " should be number");
          }
      };
  };
  var isValidHeight = function(param) {
      var result = param !== undefined && param.height !== undefined && isNumber(param.height) && param.height < 57 && param.height > 31 || param === undefined || param.height === undefined;
      return {
          result: result,
          makeError: function() {
              return "The height should correspond to the range from 32 to 56";
          }
      };
  };
  var isNotEmptyOAuthList = function(param) {
      var _param;
      return {
          result: ((_param = param) === null || _param === void 0 ? void 0 : _param.length) && param.length >= 1,
          makeError: function() {
              return "OAuth list can't be empty";
          }
      };
  };

  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

  function getDefaultExportFromCjs (x) {
  	return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
  }

  var encBase64 = {exports: {}};

  function commonjsRequire(path) {
  	throw new Error('Could not dynamically require "' + path + '". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.');
  }

  var core = {exports: {}};

  var hasRequiredCore;

  function requireCore () {
  	if (hasRequiredCore) return core.exports;
  	hasRequiredCore = 1;
  	(function (module, exports) {
  (function (root, factory) {
  			{
  				// CommonJS
  				module.exports = factory();
  			}
  		}(commonjsGlobal, function () {

  			/*globals window, global, require*/

  			/**
  			 * CryptoJS core components.
  			 */
  			var CryptoJS = CryptoJS || (function (Math, undefined$1) {

  			    var crypto;

  			    // Native crypto from window (Browser)
  			    if (typeof window !== 'undefined' && window.crypto) {
  			        crypto = window.crypto;
  			    }

  			    // Native crypto in web worker (Browser)
  			    if (typeof self !== 'undefined' && self.crypto) {
  			        crypto = self.crypto;
  			    }

  			    // Native crypto from worker
  			    if (typeof globalThis !== 'undefined' && globalThis.crypto) {
  			        crypto = globalThis.crypto;
  			    }

  			    // Native (experimental IE 11) crypto from window (Browser)
  			    if (!crypto && typeof window !== 'undefined' && window.msCrypto) {
  			        crypto = window.msCrypto;
  			    }

  			    // Native crypto from global (NodeJS)
  			    if (!crypto && typeof commonjsGlobal !== 'undefined' && commonjsGlobal.crypto) {
  			        crypto = commonjsGlobal.crypto;
  			    }

  			    // Native crypto import via require (NodeJS)
  			    if (!crypto && typeof commonjsRequire === 'function') {
  			        try {
  			            crypto = require('crypto');
  			        } catch (err) {}
  			    }

  			    /*
  			     * Cryptographically secure pseudorandom number generator
  			     *
  			     * As Math.random() is cryptographically not safe to use
  			     */
  			    var cryptoSecureRandomInt = function () {
  			        if (crypto) {
  			            // Use getRandomValues method (Browser)
  			            if (typeof crypto.getRandomValues === 'function') {
  			                try {
  			                    return crypto.getRandomValues(new Uint32Array(1))[0];
  			                } catch (err) {}
  			            }

  			            // Use randomBytes method (NodeJS)
  			            if (typeof crypto.randomBytes === 'function') {
  			                try {
  			                    return crypto.randomBytes(4).readInt32LE();
  			                } catch (err) {}
  			            }
  			        }

  			        throw new Error('Native crypto module could not be used to get secure random number.');
  			    };

  			    /*
  			     * Local polyfill of Object.create

  			     */
  			    var create = Object.create || (function () {
  			        function F() {}

  			        return function (obj) {
  			            var subtype;

  			            F.prototype = obj;

  			            subtype = new F();

  			            F.prototype = null;

  			            return subtype;
  			        };
  			    }());

  			    /**
  			     * CryptoJS namespace.
  			     */
  			    var C = {};

  			    /**
  			     * Library namespace.
  			     */
  			    var C_lib = C.lib = {};

  			    /**
  			     * Base object for prototypal inheritance.
  			     */
  			    var Base = C_lib.Base = (function () {


  			        return {
  			            /**
  			             * Creates a new object that inherits from this object.
  			             *
  			             * @param {Object} overrides Properties to copy into the new object.
  			             *
  			             * @return {Object} The new object.
  			             *
  			             * @static
  			             *
  			             * @example
  			             *
  			             *     var MyType = CryptoJS.lib.Base.extend({
  			             *         field: 'value',
  			             *
  			             *         method: function () {
  			             *         }
  			             *     });
  			             */
  			            extend: function (overrides) {
  			                // Spawn
  			                var subtype = create(this);

  			                // Augment
  			                if (overrides) {
  			                    subtype.mixIn(overrides);
  			                }

  			                // Create default initializer
  			                if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {
  			                    subtype.init = function () {
  			                        subtype.$super.init.apply(this, arguments);
  			                    };
  			                }

  			                // Initializer's prototype is the subtype object
  			                subtype.init.prototype = subtype;

  			                // Reference supertype
  			                subtype.$super = this;

  			                return subtype;
  			            },

  			            /**
  			             * Extends this object and runs the init method.
  			             * Arguments to create() will be passed to init().
  			             *
  			             * @return {Object} The new object.
  			             *
  			             * @static
  			             *
  			             * @example
  			             *
  			             *     var instance = MyType.create();
  			             */
  			            create: function () {
  			                var instance = this.extend();
  			                instance.init.apply(instance, arguments);

  			                return instance;
  			            },

  			            /**
  			             * Initializes a newly created object.
  			             * Override this method to add some logic when your objects are created.
  			             *
  			             * @example
  			             *
  			             *     var MyType = CryptoJS.lib.Base.extend({
  			             *         init: function () {
  			             *             // ...
  			             *         }
  			             *     });
  			             */
  			            init: function () {
  			            },

  			            /**
  			             * Copies properties into this object.
  			             *
  			             * @param {Object} properties The properties to mix in.
  			             *
  			             * @example
  			             *
  			             *     MyType.mixIn({
  			             *         field: 'value'
  			             *     });
  			             */
  			            mixIn: function (properties) {
  			                for (var propertyName in properties) {
  			                    if (properties.hasOwnProperty(propertyName)) {
  			                        this[propertyName] = properties[propertyName];
  			                    }
  			                }

  			                // IE won't copy toString using the loop above
  			                if (properties.hasOwnProperty('toString')) {
  			                    this.toString = properties.toString;
  			                }
  			            },

  			            /**
  			             * Creates a copy of this object.
  			             *
  			             * @return {Object} The clone.
  			             *
  			             * @example
  			             *
  			             *     var clone = instance.clone();
  			             */
  			            clone: function () {
  			                return this.init.prototype.extend(this);
  			            }
  			        };
  			    }());

  			    /**
  			     * An array of 32-bit words.
  			     *
  			     * @property {Array} words The array of 32-bit words.
  			     * @property {number} sigBytes The number of significant bytes in this word array.
  			     */
  			    var WordArray = C_lib.WordArray = Base.extend({
  			        /**
  			         * Initializes a newly created word array.
  			         *
  			         * @param {Array} words (Optional) An array of 32-bit words.
  			         * @param {number} sigBytes (Optional) The number of significant bytes in the words.
  			         *
  			         * @example
  			         *
  			         *     var wordArray = CryptoJS.lib.WordArray.create();
  			         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);
  			         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);
  			         */
  			        init: function (words, sigBytes) {
  			            words = this.words = words || [];

  			            if (sigBytes != undefined$1) {
  			                this.sigBytes = sigBytes;
  			            } else {
  			                this.sigBytes = words.length * 4;
  			            }
  			        },

  			        /**
  			         * Converts this word array to a string.
  			         *
  			         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex
  			         *
  			         * @return {string} The stringified word array.
  			         *
  			         * @example
  			         *
  			         *     var string = wordArray + '';
  			         *     var string = wordArray.toString();
  			         *     var string = wordArray.toString(CryptoJS.enc.Utf8);
  			         */
  			        toString: function (encoder) {
  			            return (encoder || Hex).stringify(this);
  			        },

  			        /**
  			         * Concatenates a word array to this word array.
  			         *
  			         * @param {WordArray} wordArray The word array to append.
  			         *
  			         * @return {WordArray} This word array.
  			         *
  			         * @example
  			         *
  			         *     wordArray1.concat(wordArray2);
  			         */
  			        concat: function (wordArray) {
  			            // Shortcuts
  			            var thisWords = this.words;
  			            var thatWords = wordArray.words;
  			            var thisSigBytes = this.sigBytes;
  			            var thatSigBytes = wordArray.sigBytes;

  			            // Clamp excess bits
  			            this.clamp();

  			            // Concat
  			            if (thisSigBytes % 4) {
  			                // Copy one byte at a time
  			                for (var i = 0; i < thatSigBytes; i++) {
  			                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;
  			                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);
  			                }
  			            } else {
  			                // Copy one word at a time
  			                for (var j = 0; j < thatSigBytes; j += 4) {
  			                    thisWords[(thisSigBytes + j) >>> 2] = thatWords[j >>> 2];
  			                }
  			            }
  			            this.sigBytes += thatSigBytes;

  			            // Chainable
  			            return this;
  			        },

  			        /**
  			         * Removes insignificant bits.
  			         *
  			         * @example
  			         *
  			         *     wordArray.clamp();
  			         */
  			        clamp: function () {
  			            // Shortcuts
  			            var words = this.words;
  			            var sigBytes = this.sigBytes;

  			            // Clamp
  			            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);
  			            words.length = Math.ceil(sigBytes / 4);
  			        },

  			        /**
  			         * Creates a copy of this word array.
  			         *
  			         * @return {WordArray} The clone.
  			         *
  			         * @example
  			         *
  			         *     var clone = wordArray.clone();
  			         */
  			        clone: function () {
  			            var clone = Base.clone.call(this);
  			            clone.words = this.words.slice(0);

  			            return clone;
  			        },

  			        /**
  			         * Creates a word array filled with random bytes.
  			         *
  			         * @param {number} nBytes The number of random bytes to generate.
  			         *
  			         * @return {WordArray} The random word array.
  			         *
  			         * @static
  			         *
  			         * @example
  			         *
  			         *     var wordArray = CryptoJS.lib.WordArray.random(16);
  			         */
  			        random: function (nBytes) {
  			            var words = [];

  			            for (var i = 0; i < nBytes; i += 4) {
  			                words.push(cryptoSecureRandomInt());
  			            }

  			            return new WordArray.init(words, nBytes);
  			        }
  			    });

  			    /**
  			     * Encoder namespace.
  			     */
  			    var C_enc = C.enc = {};

  			    /**
  			     * Hex encoding strategy.
  			     */
  			    var Hex = C_enc.Hex = {
  			        /**
  			         * Converts a word array to a hex string.
  			         *
  			         * @param {WordArray} wordArray The word array.
  			         *
  			         * @return {string} The hex string.
  			         *
  			         * @static
  			         *
  			         * @example
  			         *
  			         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);
  			         */
  			        stringify: function (wordArray) {
  			            // Shortcuts
  			            var words = wordArray.words;
  			            var sigBytes = wordArray.sigBytes;

  			            // Convert
  			            var hexChars = [];
  			            for (var i = 0; i < sigBytes; i++) {
  			                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;
  			                hexChars.push((bite >>> 4).toString(16));
  			                hexChars.push((bite & 0x0f).toString(16));
  			            }

  			            return hexChars.join('');
  			        },

  			        /**
  			         * Converts a hex string to a word array.
  			         *
  			         * @param {string} hexStr The hex string.
  			         *
  			         * @return {WordArray} The word array.
  			         *
  			         * @static
  			         *
  			         * @example
  			         *
  			         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);
  			         */
  			        parse: function (hexStr) {
  			            // Shortcut
  			            var hexStrLength = hexStr.length;

  			            // Convert
  			            var words = [];
  			            for (var i = 0; i < hexStrLength; i += 2) {
  			                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);
  			            }

  			            return new WordArray.init(words, hexStrLength / 2);
  			        }
  			    };

  			    /**
  			     * Latin1 encoding strategy.
  			     */
  			    var Latin1 = C_enc.Latin1 = {
  			        /**
  			         * Converts a word array to a Latin1 string.
  			         *
  			         * @param {WordArray} wordArray The word array.
  			         *
  			         * @return {string} The Latin1 string.
  			         *
  			         * @static
  			         *
  			         * @example
  			         *
  			         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);
  			         */
  			        stringify: function (wordArray) {
  			            // Shortcuts
  			            var words = wordArray.words;
  			            var sigBytes = wordArray.sigBytes;

  			            // Convert
  			            var latin1Chars = [];
  			            for (var i = 0; i < sigBytes; i++) {
  			                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;
  			                latin1Chars.push(String.fromCharCode(bite));
  			            }

  			            return latin1Chars.join('');
  			        },

  			        /**
  			         * Converts a Latin1 string to a word array.
  			         *
  			         * @param {string} latin1Str The Latin1 string.
  			         *
  			         * @return {WordArray} The word array.
  			         *
  			         * @static
  			         *
  			         * @example
  			         *
  			         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);
  			         */
  			        parse: function (latin1Str) {
  			            // Shortcut
  			            var latin1StrLength = latin1Str.length;

  			            // Convert
  			            var words = [];
  			            for (var i = 0; i < latin1StrLength; i++) {
  			                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);
  			            }

  			            return new WordArray.init(words, latin1StrLength);
  			        }
  			    };

  			    /**
  			     * UTF-8 encoding strategy.
  			     */
  			    var Utf8 = C_enc.Utf8 = {
  			        /**
  			         * Converts a word array to a UTF-8 string.
  			         *
  			         * @param {WordArray} wordArray The word array.
  			         *
  			         * @return {string} The UTF-8 string.
  			         *
  			         * @static
  			         *
  			         * @example
  			         *
  			         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);
  			         */
  			        stringify: function (wordArray) {
  			            try {
  			                return decodeURIComponent(escape(Latin1.stringify(wordArray)));
  			            } catch (e) {
  			                throw new Error('Malformed UTF-8 data');
  			            }
  			        },

  			        /**
  			         * Converts a UTF-8 string to a word array.
  			         *
  			         * @param {string} utf8Str The UTF-8 string.
  			         *
  			         * @return {WordArray} The word array.
  			         *
  			         * @static
  			         *
  			         * @example
  			         *
  			         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);
  			         */
  			        parse: function (utf8Str) {
  			            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));
  			        }
  			    };

  			    /**
  			     * Abstract buffered block algorithm template.
  			     *
  			     * The property blockSize must be implemented in a concrete subtype.
  			     *
  			     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0
  			     */
  			    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({
  			        /**
  			         * Resets this block algorithm's data buffer to its initial state.
  			         *
  			         * @example
  			         *
  			         *     bufferedBlockAlgorithm.reset();
  			         */
  			        reset: function () {
  			            // Initial values
  			            this._data = new WordArray.init();
  			            this._nDataBytes = 0;
  			        },

  			        /**
  			         * Adds new data to this block algorithm's buffer.
  			         *
  			         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.
  			         *
  			         * @example
  			         *
  			         *     bufferedBlockAlgorithm._append('data');
  			         *     bufferedBlockAlgorithm._append(wordArray);
  			         */
  			        _append: function (data) {
  			            // Convert string to WordArray, else assume WordArray already
  			            if (typeof data == 'string') {
  			                data = Utf8.parse(data);
  			            }

  			            // Append
  			            this._data.concat(data);
  			            this._nDataBytes += data.sigBytes;
  			        },

  			        /**
  			         * Processes available data blocks.
  			         *
  			         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.
  			         *
  			         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.
  			         *
  			         * @return {WordArray} The processed data.
  			         *
  			         * @example
  			         *
  			         *     var processedData = bufferedBlockAlgorithm._process();
  			         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');
  			         */
  			        _process: function (doFlush) {
  			            var processedWords;

  			            // Shortcuts
  			            var data = this._data;
  			            var dataWords = data.words;
  			            var dataSigBytes = data.sigBytes;
  			            var blockSize = this.blockSize;
  			            var blockSizeBytes = blockSize * 4;

  			            // Count blocks ready
  			            var nBlocksReady = dataSigBytes / blockSizeBytes;
  			            if (doFlush) {
  			                // Round up to include partial blocks
  			                nBlocksReady = Math.ceil(nBlocksReady);
  			            } else {
  			                // Round down to include only full blocks,
  			                // less the number of blocks that must remain in the buffer
  			                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);
  			            }

  			            // Count words ready
  			            var nWordsReady = nBlocksReady * blockSize;

  			            // Count bytes ready
  			            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);

  			            // Process blocks
  			            if (nWordsReady) {
  			                for (var offset = 0; offset < nWordsReady; offset += blockSize) {
  			                    // Perform concrete-algorithm logic
  			                    this._doProcessBlock(dataWords, offset);
  			                }

  			                // Remove processed words
  			                processedWords = dataWords.splice(0, nWordsReady);
  			                data.sigBytes -= nBytesReady;
  			            }

  			            // Return processed words
  			            return new WordArray.init(processedWords, nBytesReady);
  			        },

  			        /**
  			         * Creates a copy of this object.
  			         *
  			         * @return {Object} The clone.
  			         *
  			         * @example
  			         *
  			         *     var clone = bufferedBlockAlgorithm.clone();
  			         */
  			        clone: function () {
  			            var clone = Base.clone.call(this);
  			            clone._data = this._data.clone();

  			            return clone;
  			        },

  			        _minBufferSize: 0
  			    });

  			    /**
  			     * Abstract hasher template.
  			     *
  			     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)
  			     */
  			    C_lib.Hasher = BufferedBlockAlgorithm.extend({
  			        /**
  			         * Configuration options.
  			         */
  			        cfg: Base.extend(),

  			        /**
  			         * Initializes a newly created hasher.
  			         *
  			         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.
  			         *
  			         * @example
  			         *
  			         *     var hasher = CryptoJS.algo.SHA256.create();
  			         */
  			        init: function (cfg) {
  			            // Apply config defaults
  			            this.cfg = this.cfg.extend(cfg);

  			            // Set initial values
  			            this.reset();
  			        },

  			        /**
  			         * Resets this hasher to its initial state.
  			         *
  			         * @example
  			         *
  			         *     hasher.reset();
  			         */
  			        reset: function () {
  			            // Reset data buffer
  			            BufferedBlockAlgorithm.reset.call(this);

  			            // Perform concrete-hasher logic
  			            this._doReset();
  			        },

  			        /**
  			         * Updates this hasher with a message.
  			         *
  			         * @param {WordArray|string} messageUpdate The message to append.
  			         *
  			         * @return {Hasher} This hasher.
  			         *
  			         * @example
  			         *
  			         *     hasher.update('message');
  			         *     hasher.update(wordArray);
  			         */
  			        update: function (messageUpdate) {
  			            // Append
  			            this._append(messageUpdate);

  			            // Update the hash
  			            this._process();

  			            // Chainable
  			            return this;
  			        },

  			        /**
  			         * Finalizes the hash computation.
  			         * Note that the finalize operation is effectively a destructive, read-once operation.
  			         *
  			         * @param {WordArray|string} messageUpdate (Optional) A final message update.
  			         *
  			         * @return {WordArray} The hash.
  			         *
  			         * @example
  			         *
  			         *     var hash = hasher.finalize();
  			         *     var hash = hasher.finalize('message');
  			         *     var hash = hasher.finalize(wordArray);
  			         */
  			        finalize: function (messageUpdate) {
  			            // Final message update
  			            if (messageUpdate) {
  			                this._append(messageUpdate);
  			            }

  			            // Perform concrete-hasher logic
  			            var hash = this._doFinalize();

  			            return hash;
  			        },

  			        blockSize: 512/32,

  			        /**
  			         * Creates a shortcut function to a hasher's object interface.
  			         *
  			         * @param {Hasher} hasher The hasher to create a helper for.
  			         *
  			         * @return {Function} The shortcut function.
  			         *
  			         * @static
  			         *
  			         * @example
  			         *
  			         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);
  			         */
  			        _createHelper: function (hasher) {
  			            return function (message, cfg) {
  			                return new hasher.init(cfg).finalize(message);
  			            };
  			        },

  			        /**
  			         * Creates a shortcut function to the HMAC's object interface.
  			         *
  			         * @param {Hasher} hasher The hasher to use in this HMAC helper.
  			         *
  			         * @return {Function} The shortcut function.
  			         *
  			         * @static
  			         *
  			         * @example
  			         *
  			         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);
  			         */
  			        _createHmacHelper: function (hasher) {
  			            return function (message, key) {
  			                return new C_algo.HMAC.init(hasher, key).finalize(message);
  			            };
  			        }
  			    });

  			    /**
  			     * Algorithm namespace.
  			     */
  			    var C_algo = C.algo = {};

  			    return C;
  			}(Math));


  			return CryptoJS;

  		})); 
  	} (core));
  	return core.exports;
  }

  (function (module, exports) {
  (function (root, factory) {
  		{
  			// CommonJS
  			module.exports = factory(requireCore());
  		}
  	}(commonjsGlobal, function (CryptoJS) {

  		(function () {
  		    // Shortcuts
  		    var C = CryptoJS;
  		    var C_lib = C.lib;
  		    var WordArray = C_lib.WordArray;
  		    var C_enc = C.enc;

  		    /**
  		     * Base64 encoding strategy.
  		     */
  		    C_enc.Base64 = {
  		        /**
  		         * Converts a word array to a Base64 string.
  		         *
  		         * @param {WordArray} wordArray The word array.
  		         *
  		         * @return {string} The Base64 string.
  		         *
  		         * @static
  		         *
  		         * @example
  		         *
  		         *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);
  		         */
  		        stringify: function (wordArray) {
  		            // Shortcuts
  		            var words = wordArray.words;
  		            var sigBytes = wordArray.sigBytes;
  		            var map = this._map;

  		            // Clamp excess bits
  		            wordArray.clamp();

  		            // Convert
  		            var base64Chars = [];
  		            for (var i = 0; i < sigBytes; i += 3) {
  		                var byte1 = (words[i >>> 2]       >>> (24 - (i % 4) * 8))       & 0xff;
  		                var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;
  		                var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;

  		                var triplet = (byte1 << 16) | (byte2 << 8) | byte3;

  		                for (var j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {
  		                    base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));
  		                }
  		            }

  		            // Add padding
  		            var paddingChar = map.charAt(64);
  		            if (paddingChar) {
  		                while (base64Chars.length % 4) {
  		                    base64Chars.push(paddingChar);
  		                }
  		            }

  		            return base64Chars.join('');
  		        },

  		        /**
  		         * Converts a Base64 string to a word array.
  		         *
  		         * @param {string} base64Str The Base64 string.
  		         *
  		         * @return {WordArray} The word array.
  		         *
  		         * @static
  		         *
  		         * @example
  		         *
  		         *     var wordArray = CryptoJS.enc.Base64.parse(base64String);
  		         */
  		        parse: function (base64Str) {
  		            // Shortcuts
  		            var base64StrLength = base64Str.length;
  		            var map = this._map;
  		            var reverseMap = this._reverseMap;

  		            if (!reverseMap) {
  		                    reverseMap = this._reverseMap = [];
  		                    for (var j = 0; j < map.length; j++) {
  		                        reverseMap[map.charCodeAt(j)] = j;
  		                    }
  		            }

  		            // Ignore padding
  		            var paddingChar = map.charAt(64);
  		            if (paddingChar) {
  		                var paddingIndex = base64Str.indexOf(paddingChar);
  		                if (paddingIndex !== -1) {
  		                    base64StrLength = paddingIndex;
  		                }
  		            }

  		            // Convert
  		            return parseLoop(base64Str, base64StrLength, reverseMap);

  		        },

  		        _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='
  		    };

  		    function parseLoop(base64Str, base64StrLength, reverseMap) {
  		      var words = [];
  		      var nBytes = 0;
  		      for (var i = 0; i < base64StrLength; i++) {
  		          if (i % 4) {
  		              var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << ((i % 4) * 2);
  		              var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> (6 - (i % 4) * 2);
  		              var bitsCombined = bits1 | bits2;
  		              words[nBytes >>> 2] |= bitsCombined << (24 - (nBytes % 4) * 8);
  		              nBytes++;
  		          }
  		      }
  		      return WordArray.create(words, nBytes);
  		    }
  		}());


  		return CryptoJS.enc.Base64;

  	})); 
  } (encBase64));

  var encBase64Exports = encBase64.exports;
  var Base64 = /*@__PURE__*/getDefaultExportFromCjs(encBase64Exports);

  var sha256$1 = {exports: {}};

  (function (module, exports) {
  (function (root, factory) {
  		{
  			// CommonJS
  			module.exports = factory(requireCore());
  		}
  	}(commonjsGlobal, function (CryptoJS) {

  		(function (Math) {
  		    // Shortcuts
  		    var C = CryptoJS;
  		    var C_lib = C.lib;
  		    var WordArray = C_lib.WordArray;
  		    var Hasher = C_lib.Hasher;
  		    var C_algo = C.algo;

  		    // Initialization and round constants tables
  		    var H = [];
  		    var K = [];

  		    // Compute constants
  		    (function () {
  		        function isPrime(n) {
  		            var sqrtN = Math.sqrt(n);
  		            for (var factor = 2; factor <= sqrtN; factor++) {
  		                if (!(n % factor)) {
  		                    return false;
  		                }
  		            }

  		            return true;
  		        }

  		        function getFractionalBits(n) {
  		            return ((n - (n | 0)) * 0x100000000) | 0;
  		        }

  		        var n = 2;
  		        var nPrime = 0;
  		        while (nPrime < 64) {
  		            if (isPrime(n)) {
  		                if (nPrime < 8) {
  		                    H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));
  		                }
  		                K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));

  		                nPrime++;
  		            }

  		            n++;
  		        }
  		    }());

  		    // Reusable object
  		    var W = [];

  		    /**
  		     * SHA-256 hash algorithm.
  		     */
  		    var SHA256 = C_algo.SHA256 = Hasher.extend({
  		        _doReset: function () {
  		            this._hash = new WordArray.init(H.slice(0));
  		        },

  		        _doProcessBlock: function (M, offset) {
  		            // Shortcut
  		            var H = this._hash.words;

  		            // Working variables
  		            var a = H[0];
  		            var b = H[1];
  		            var c = H[2];
  		            var d = H[3];
  		            var e = H[4];
  		            var f = H[5];
  		            var g = H[6];
  		            var h = H[7];

  		            // Computation
  		            for (var i = 0; i < 64; i++) {
  		                if (i < 16) {
  		                    W[i] = M[offset + i] | 0;
  		                } else {
  		                    var gamma0x = W[i - 15];
  		                    var gamma0  = ((gamma0x << 25) | (gamma0x >>> 7))  ^
  		                                  ((gamma0x << 14) | (gamma0x >>> 18)) ^
  		                                   (gamma0x >>> 3);

  		                    var gamma1x = W[i - 2];
  		                    var gamma1  = ((gamma1x << 15) | (gamma1x >>> 17)) ^
  		                                  ((gamma1x << 13) | (gamma1x >>> 19)) ^
  		                                   (gamma1x >>> 10);

  		                    W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];
  		                }

  		                var ch  = (e & f) ^ (~e & g);
  		                var maj = (a & b) ^ (a & c) ^ (b & c);

  		                var sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));
  		                var sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7)  | (e >>> 25));

  		                var t1 = h + sigma1 + ch + K[i] + W[i];
  		                var t2 = sigma0 + maj;

  		                h = g;
  		                g = f;
  		                f = e;
  		                e = (d + t1) | 0;
  		                d = c;
  		                c = b;
  		                b = a;
  		                a = (t1 + t2) | 0;
  		            }

  		            // Intermediate hash value
  		            H[0] = (H[0] + a) | 0;
  		            H[1] = (H[1] + b) | 0;
  		            H[2] = (H[2] + c) | 0;
  		            H[3] = (H[3] + d) | 0;
  		            H[4] = (H[4] + e) | 0;
  		            H[5] = (H[5] + f) | 0;
  		            H[6] = (H[6] + g) | 0;
  		            H[7] = (H[7] + h) | 0;
  		        },

  		        _doFinalize: function () {
  		            // Shortcuts
  		            var data = this._data;
  		            var dataWords = data.words;

  		            var nBitsTotal = this._nDataBytes * 8;
  		            var nBitsLeft = data.sigBytes * 8;

  		            // Add padding
  		            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);
  		            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);
  		            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;
  		            data.sigBytes = dataWords.length * 4;

  		            // Hash final blocks
  		            this._process();

  		            // Return final computed hash
  		            return this._hash;
  		        },

  		        clone: function () {
  		            var clone = Hasher.clone.call(this);
  		            clone._hash = this._hash.clone();

  		            return clone;
  		        }
  		    });

  		    /**
  		     * Shortcut function to the hasher's object interface.
  		     *
  		     * @param {WordArray|string} message The message to hash.
  		     *
  		     * @return {WordArray} The hash.
  		     *
  		     * @static
  		     *
  		     * @example
  		     *
  		     *     var hash = CryptoJS.SHA256('message');
  		     *     var hash = CryptoJS.SHA256(wordArray);
  		     */
  		    C.SHA256 = Hasher._createHelper(SHA256);

  		    /**
  		     * Shortcut function to the HMAC's object interface.
  		     *
  		     * @param {WordArray|string} message The message to hash.
  		     * @param {WordArray|string} key The secret key.
  		     *
  		     * @return {WordArray} The HMAC.
  		     *
  		     * @static
  		     *
  		     * @example
  		     *
  		     *     var hmac = CryptoJS.HmacSHA256(message, key);
  		     */
  		    C.HmacSHA256 = Hasher._createHmacHelper(SHA256);
  		}(Math));


  		return CryptoJS.SHA256;

  	})); 
  } (sha256$1));

  var sha256Exports = sha256$1.exports;
  var sha256 = /*@__PURE__*/getDefaultExportFromCjs(sha256Exports);

  /**
   * Генерация code challenge для нового oauth
   */ var generateCodeChallenge = function() {
      var codeVerifier = nanoid();
      var hash = sha256(codeVerifier);
      var base64 = Base64.stringify(hash);
      return base64.replace(/=*$/g, "").replace(/\+/g, "-").replace(/\//g, "_");
  };

  var WidgetState;
  (function(WidgetState) {
      WidgetState["LOADING"] = "loading";
      WidgetState["LOADED"] = "loaded";
      WidgetState["NOT_LOADED"] = "not_loaded";
  })(WidgetState || (WidgetState = {}));
  var WidgetErrorCode;
  (function(WidgetErrorCode) {
      WidgetErrorCode[WidgetErrorCode[/**
     * Не загрузился iframe
     */ "TimeoutExceeded"] = 0] = "TimeoutExceeded";
      WidgetErrorCode[WidgetErrorCode[/**
     * Внутренняя ошибка
     */ "InternalError"] = 1] = "InternalError";
  })(WidgetErrorCode || (WidgetErrorCode = {}));

  function _define_property$b(obj, key, value) {
      if (key in obj) {
          Object.defineProperty(obj, key, {
              value: value,
              enumerable: true,
              configurable: true,
              writable: true
          });
      } else {
          obj[key] = value;
      }
      return obj;
  }
  var _obj$7;
  var WIDGET_ERROR_TEXT = (_obj$7 = {}, _define_property$b(_obj$7, WidgetErrorCode.TimeoutExceeded, "timeout"), _define_property$b(_obj$7, WidgetErrorCode.InternalError, "internal error"), _obj$7);

  exports.WidgetEvents = void 0;
  (function(WidgetEvents) {
      WidgetEvents["START_LOAD"] = "common: start load";
      WidgetEvents["LOAD"] = "common: load";
      WidgetEvents["SHOW"] = "common: show";
      WidgetEvents["HIDE"] = "common: hide";
      WidgetEvents["CLOSE"] = "common: close";
      WidgetEvents["ERROR"] = "common: error";
      WidgetEvents["RESIZE"] = "common: resize";
  })(exports.WidgetEvents || (exports.WidgetEvents = {}));

  var getWidgetTemplate = function(id) {
      return '\n<div id="'.concat(id, '" data-test-id="widget">\n  <style>\n    #').concat(id, " {\n      width: 100%;\n      height: 100%;\n      max-width: 100%;\n      max-height: 100%;\n    }\n\n    #").concat(id, " iframe {\n      border: none;\n      color-scheme: auto;\n    }\n\n    #").concat(id, " .loader,\n    #").concat(id, ' .error {\n      display: none;\n      width: 100%;\n      height: 100%;\n      text-align: center;\n    }\n  </style>\n  <div class="loader"></div>\n  <div class="error"></div>\n  <iframe width="100%" height="100%"></iframe>\n</div>\n  ');
  };

  function _assert_this_initialized$4(self) {
      if (self === void 0) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
  }
  function _class_call_check$4(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
      }
  }
  function _defineProperties$4(target, props) {
      for(var i = 0; i < props.length; i++){
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor) descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
      }
  }
  function _create_class$4(Constructor, protoProps, staticProps) {
      if (protoProps) _defineProperties$4(Constructor.prototype, protoProps);
      if (staticProps) _defineProperties$4(Constructor, staticProps);
      return Constructor;
  }
  function _define_property$a(obj, key, value) {
      if (key in obj) {
          Object.defineProperty(obj, key, {
              value: value,
              enumerable: true,
              configurable: true,
              writable: true
          });
      } else {
          obj[key] = value;
      }
      return obj;
  }
  function _get_prototype_of$4(o) {
      _get_prototype_of$4 = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o) {
          return o.__proto__ || Object.getPrototypeOf(o);
      };
      return _get_prototype_of$4(o);
  }
  function _inherits$4(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
              value: subClass,
              writable: true,
              configurable: true
          }
      });
      if (superClass) _set_prototype_of$4(subClass, superClass);
  }
  function _object_spread$2(target) {
      for(var i = 1; i < arguments.length; i++){
          var source = arguments[i] != null ? arguments[i] : {};
          var ownKeys = Object.keys(source);
          if (typeof Object.getOwnPropertySymbols === "function") {
              ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                  return Object.getOwnPropertyDescriptor(source, sym).enumerable;
              }));
          }
          ownKeys.forEach(function(key) {
              _define_property$a(target, key, source[key]);
          });
      }
      return target;
  }
  function ownKeys$2(object, enumerableOnly) {
      var keys = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
          var symbols = Object.getOwnPropertySymbols(object);
          if (enumerableOnly) {
              symbols = symbols.filter(function(sym) {
                  return Object.getOwnPropertyDescriptor(object, sym).enumerable;
              });
          }
          keys.push.apply(keys, symbols);
      }
      return keys;
  }
  function _object_spread_props$2(target, source) {
      source = source != null ? source : {};
      if (Object.getOwnPropertyDescriptors) {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
      } else {
          ownKeys$2(Object(source)).forEach(function(key) {
              Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
          });
      }
      return target;
  }
  function _object_without_properties(source, excluded) {
      if (source == null) return {};
      var target = _object_without_properties_loose(source, excluded);
      var key, i;
      if (Object.getOwnPropertySymbols) {
          var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
          for(i = 0; i < sourceSymbolKeys.length; i++){
              key = sourceSymbolKeys[i];
              if (excluded.indexOf(key) >= 0) continue;
              if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
              target[key] = source[key];
          }
      }
      return target;
  }
  function _object_without_properties_loose(source, excluded) {
      if (source == null) return {};
      var target = {};
      var sourceKeys = Object.keys(source);
      var key, i;
      for(i = 0; i < sourceKeys.length; i++){
          key = sourceKeys[i];
          if (excluded.indexOf(key) >= 0) continue;
          target[key] = source[key];
      }
      return target;
  }
  function _possible_constructor_return$4(self, call) {
      if (call && (_type_of$4(call) === "object" || typeof call === "function")) {
          return call;
      }
      return _assert_this_initialized$4(self);
  }
  function _set_prototype_of$4(o, p) {
      _set_prototype_of$4 = Object.setPrototypeOf || function setPrototypeOf(o, p) {
          o.__proto__ = p;
          return o;
      };
      return _set_prototype_of$4(o, p);
  }
  function _type_of$4(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
  }
  function _is_native_reflect_construct$4() {
      if (typeof Reflect === "undefined" || !Reflect.construct) return false;
      if (Reflect.construct.sham) return false;
      if (typeof Proxy === "function") return true;
      try {
          Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
          return true;
      } catch (e) {
          return false;
      }
  }
  function _create_super$4(Derived) {
      var hasNativeReflectConstruct = _is_native_reflect_construct$4();
      return function _createSuperInternal() {
          var Super = _get_prototype_of$4(Derived), result;
          if (hasNativeReflectConstruct) {
              var NewTarget = _get_prototype_of$4(this).constructor;
              result = Reflect.construct(Super, arguments, NewTarget);
          } else {
              result = Super.apply(this, arguments);
          }
          return _possible_constructor_return$4(this, result);
      };
  }
  function _ts_decorate$3(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
      else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
      return c > 3 && r && Object.defineProperty(target, key, r), r;
  }
  var MODULE_LOAD_TIMEOUT = 5000;
  var MODULE_CHANGE_STATE_TIMEOUT = 300;
  var CODE_CHALLENGE_METHOD = "s256";
  var Widget = /*#__PURE__*/ function(Dispatcher) {
      _inherits$4(Widget, Dispatcher);
      var _super = _create_super$4(Widget);
      function Widget() {
          _class_call_check$4(this, Widget);
          var _this;
          _this = _super.call(this);
          _define_property$a(_assert_this_initialized$4(_this), "id", uuid());
          _define_property$a(_assert_this_initialized$4(_this), "lang", void 0);
          _define_property$a(_assert_this_initialized$4(_this), "scheme", void 0);
          _define_property$a(_assert_this_initialized$4(_this), "vkidAppName", "");
          _define_property$a(_assert_this_initialized$4(_this), "config", void 0);
          _define_property$a(_assert_this_initialized$4(_this), "timeoutTimer", void 0);
          _define_property$a(_assert_this_initialized$4(_this), "bridge", void 0);
          _define_property$a(_assert_this_initialized$4(_this), "container", void 0);
          _define_property$a(_assert_this_initialized$4(_this), "templateRenderer", getWidgetTemplate);
          _define_property$a(_assert_this_initialized$4(_this), "elements", void 0);
          _this.config = Widget.__config;
          return _this;
      }
      _create_class$4(Widget, [
          {
              key: "render",
              value: function render(params) {
                  var container = params.container, otherParams = _object_without_properties(params, [
                      "container"
                  ]);
                  this.container = container;
                  this.renderTemplate();
                  this.registerElements();
                  this.loadWidgetFrame(otherParams);
                  return this;
              }
          },
          {
              key: "close",
              value: function close() {
                  var _this_elements_root, _this_elements, _this_bridge;
                  clearTimeout(this.timeoutTimer);
                  (_this_elements = this.elements) === null || _this_elements === void 0 ? void 0 : (_this_elements_root = _this_elements.root) === null || _this_elements_root === void 0 ? void 0 : _this_elements_root.remove();
                  (_this_bridge = this.bridge) === null || _this_bridge === void 0 ? void 0 : _this_bridge.destroy();
                  this.events.emit(exports.WidgetEvents.CLOSE);
              }
          },
          {
              key: "show",
              value: function show() {
                  if (this.elements.root) {
                      this.elements.root.style.display = "block";
                      this.events.emit(exports.WidgetEvents.SHOW);
                  }
                  return this;
              }
          },
          {
              key: "hide",
              value: function hide() {
                  if (this.elements.root) {
                      this.elements.root.style.display = "none";
                      this.events.emit(exports.WidgetEvents.HIDE);
                  }
                  return this;
              }
          },
          {
              key: "onStartLoadHandler",
              value: /**
     * Метод вызывается перед началом загрузки iframe с VK ID приложением
     */ function onStartLoadHandler() {
                  var _this = this;
                  this.setState(WidgetState.LOADING);
                  this.timeoutTimer = setTimeout(function() {
                      _this.onErrorHandler({
                          code: WidgetErrorCode.TimeoutExceeded,
                          text: WIDGET_ERROR_TEXT[WidgetErrorCode.TimeoutExceeded]
                      });
                  }, MODULE_LOAD_TIMEOUT);
                  this.events.emit(exports.WidgetEvents.START_LOAD);
              }
          },
          {
              key: "onLoadHandler",
              value: /**
     * Метод вызывается после того, как полностью загружен iframe с VK ID приложением
     */ function onLoadHandler() {
                  var _this = this;
                  clearTimeout(this.timeoutTimer);
                  setTimeout(function() {
                      // Задержка избавляет от моргания замены шаблона на iframe
                      _this.setState(WidgetState.LOADED);
                  }, MODULE_CHANGE_STATE_TIMEOUT);
                  this.events.emit(exports.WidgetEvents.LOAD);
              }
          },
          {
              key: "onErrorHandler",
              value: /**
     * Метод вызывается, когда во время работы/загрузки VK ID приложения произошла ошибка
     */ function onErrorHandler(error) {
                  var _this_elements_iframe, _this_elements;
                  clearTimeout(this.timeoutTimer);
                  this.setState(WidgetState.NOT_LOADED);
                  this.events.emit(exports.WidgetEvents.ERROR, error);
                  (_this_elements = this.elements) === null || _this_elements === void 0 ? void 0 : (_this_elements_iframe = _this_elements.iframe) === null || _this_elements_iframe === void 0 ? void 0 : _this_elements_iframe.remove();
              }
          },
          {
              key: "onBridgeMessageHandler",
              value: /**
     * Метод вызывается при сообщениях от VK ID приложения
     */ function onBridgeMessageHandler(event) {
                  switch(event.handler){
                      case exports.WidgetEvents.LOAD:
                          {
                              this.onLoadHandler();
                              break;
                          }
                      case exports.WidgetEvents.CLOSE:
                          {
                              this.close();
                              break;
                          }
                      case exports.WidgetEvents.ERROR:
                          {
                              this.onErrorHandler({
                                  code: WidgetErrorCode.InternalError,
                                  text: WIDGET_ERROR_TEXT[WidgetErrorCode.InternalError],
                                  details: event.params
                              });
                              break;
                          }
                      case exports.WidgetEvents.RESIZE:
                          {
                              this.elements.root.style.height = "".concat(event.params.height, "px");
                              break;
                          }
                  }
              }
          },
          {
              key: "renderTemplate",
              value: // <Дополнительные хелперы>
              function renderTemplate() {
                  this.container.insertAdjacentHTML("beforeend", this.templateRenderer(this.id));
              }
          },
          {
              key: "loadWidgetFrame",
              value: function loadWidgetFrame(params) {
                  var _this = this;
                  this.onStartLoadHandler();
                  this.bridge = new Bridge({
                      iframe: this.elements.iframe,
                      origin: "https://".concat(this.config.get().__vkidDomain)
                  });
                  this.bridge.on(BridgeEvents.MESSAGE, function(event) {
                      return _this.onBridgeMessageHandler(event);
                  });
                  this.elements.iframe.src = this.getWidgetFrameSrc(this.config.get(), params);
              }
          },
          {
              key: "getWidgetFrameSrc",
              value: function getWidgetFrameSrc(config, params) {
                  var queryParams = _object_spread_props$2(_object_spread$2({}, params), {
                      code_challenge: generateCodeChallenge(),
                      code_challenge_method: CODE_CHALLENGE_METHOD,
                      origin: location.protocol + "//" + location.host
                  });
                  return getVKIDUrl(this.vkidAppName, queryParams, config);
              }
          },
          {
              key: "setState",
              value: function setState(state) {
                  this.elements.root.setAttribute("data-state", state);
              }
          },
          {
              key: "registerElements",
              value: function registerElements() {
                  var root = document.getElementById(this.id);
                  this.elements = {
                      root: root,
                      iframe: root.querySelector("iframe")
                  };
              }
          },
          {
              key: "redirectWithPayload",
              value: // TODO: добавить типы
              function redirectWithPayload(payload) {
                  location.assign(getRedirectWithPayloadUrl(payload, Widget.__config));
              }
          }
      ]);
      return Widget;
  }(Dispatcher);
  /**
     * @ignore
     */ _define_property$a(Widget, "__config", void 0);
  /**
     * @ignore
     */ _define_property$a(Widget, "__auth", void 0);
  _ts_decorate$3([
      validator({
          container: [
              isRequired
          ]
      })
  ], Widget.prototype, "render", null);

  exports.Languages = void 0;
  (function(Languages) {
      Languages[Languages["RUS"] = 0] = "RUS";
      Languages[Languages["UKR"] = 1] = "UKR";
      Languages[Languages["ENG"] = 3] = "ENG";
      Languages[Languages["SPA"] = 4] = "SPA";
      Languages[Languages["GERMAN"] = 6] = "GERMAN";
      Languages[Languages["POL"] = 15] = "POL";
      Languages[Languages["FRA"] = 16] = "FRA";
      Languages[Languages["TURKEY"] = 82] = "TURKEY";
  })(exports.Languages || (exports.Languages = {}));
  exports.Scheme = void 0;
  (function(Scheme) {
      Scheme["LIGHT"] = "light";
      Scheme["DARK"] = "dark";
  })(exports.Scheme || (exports.Scheme = {}));

  var AgreementsDialogInternalEvents;
  (function(AgreementsDialogInternalEvents) {
      AgreementsDialogInternalEvents["ACCEPT"] = "agreements dialog: accept";
      AgreementsDialogInternalEvents["DECLINE"] = "agreements dialog: decline";
  })(AgreementsDialogInternalEvents || (AgreementsDialogInternalEvents = {}));
  var AgreementsDialogPublicEvents;
  (function(AgreementsDialogPublicEvents) {
      AgreementsDialogPublicEvents["ACCEPT"] = "agreements dialog: accept";
  })(AgreementsDialogPublicEvents || (AgreementsDialogPublicEvents = {}));

  var getAgreementsDialogTemplate = function(id) {
      return '\n<div id="'.concat(id, '" data-test-id="agreements-dialog">\n  <style>\n    #').concat(id, " {\n      position: fixed;\n      top: 0px;\n      right: 0px;\n      width: 100%;\n      height: 100%;\n      z-index: 999999;\n    }\n\n    #").concat(id, ' iframe {\n      border: none;\n      color-scheme: auto;\n    }\n  </style>\n  <iframe width="100%" height="100%" />\n</div>\n  ');
  };

  function _assert_this_initialized$3(self) {
      if (self === void 0) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
  }
  function _class_call_check$3(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
      }
  }
  function _defineProperties$3(target, props) {
      for(var i = 0; i < props.length; i++){
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor) descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
      }
  }
  function _create_class$3(Constructor, protoProps, staticProps) {
      if (protoProps) _defineProperties$3(Constructor.prototype, protoProps);
      if (staticProps) _defineProperties$3(Constructor, staticProps);
      return Constructor;
  }
  function _define_property$9(obj, key, value) {
      if (key in obj) {
          Object.defineProperty(obj, key, {
              value: value,
              enumerable: true,
              configurable: true,
              writable: true
          });
      } else {
          obj[key] = value;
      }
      return obj;
  }
  function _get$2(target, property, receiver) {
      if (typeof Reflect !== "undefined" && Reflect.get) {
          _get$2 = Reflect.get;
      } else {
          _get$2 = function get(target, property, receiver) {
              var base = _super_prop_base$2(target, property);
              if (!base) return;
              var desc = Object.getOwnPropertyDescriptor(base, property);
              if (desc.get) {
                  return desc.get.call(receiver || target);
              }
              return desc.value;
          };
      }
      return _get$2(target, property, receiver || target);
  }
  function _get_prototype_of$3(o) {
      _get_prototype_of$3 = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o) {
          return o.__proto__ || Object.getPrototypeOf(o);
      };
      return _get_prototype_of$3(o);
  }
  function _inherits$3(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
              value: subClass,
              writable: true,
              configurable: true
          }
      });
      if (superClass) _set_prototype_of$3(subClass, superClass);
  }
  function _possible_constructor_return$3(self, call) {
      if (call && (_type_of$3(call) === "object" || typeof call === "function")) {
          return call;
      }
      return _assert_this_initialized$3(self);
  }
  function _set_prototype_of$3(o, p) {
      _set_prototype_of$3 = Object.setPrototypeOf || function setPrototypeOf(o, p) {
          o.__proto__ = p;
          return o;
      };
      return _set_prototype_of$3(o, p);
  }
  function _super_prop_base$2(object, property) {
      while(!Object.prototype.hasOwnProperty.call(object, property)){
          object = _get_prototype_of$3(object);
          if (object === null) break;
      }
      return object;
  }
  function _type_of$3(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
  }
  function _is_native_reflect_construct$3() {
      if (typeof Reflect === "undefined" || !Reflect.construct) return false;
      if (Reflect.construct.sham) return false;
      if (typeof Proxy === "function") return true;
      try {
          Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
          return true;
      } catch (e) {
          return false;
      }
  }
  function _create_super$3(Derived) {
      var hasNativeReflectConstruct = _is_native_reflect_construct$3();
      return function _createSuperInternal() {
          var Super = _get_prototype_of$3(Derived), result;
          if (hasNativeReflectConstruct) {
              var NewTarget = _get_prototype_of$3(this).constructor;
              result = Reflect.construct(Super, arguments, NewTarget);
          } else {
              result = Super.apply(this, arguments);
          }
          return _possible_constructor_return$3(this, result);
      };
  }
  var AgreementsDialog = /*#__PURE__*/ function(Widget) {
      _inherits$3(AgreementsDialog, Widget);
      var _super = _create_super$3(AgreementsDialog);
      function AgreementsDialog() {
          _class_call_check$3(this, AgreementsDialog);
          var _this;
          _this = _super.apply(this, arguments);
          _define_property$9(_assert_this_initialized$3(_this), "vkidAppName", "user_policy_agreements");
          _define_property$9(_assert_this_initialized$3(_this), "templateRenderer", getAgreementsDialogTemplate);
          return _this;
      }
      _create_class$3(AgreementsDialog, [
          {
              key: "onBridgeMessageHandler",
              value: function onBridgeMessageHandler(event) {
                  switch(event.handler){
                      case AgreementsDialogInternalEvents.DECLINE:
                          {
                              this.close();
                              break;
                          }
                      case AgreementsDialogInternalEvents.ACCEPT:
                          {
                              this.events.emit(AgreementsDialogPublicEvents.ACCEPT, event);
                              break;
                          }
                      default:
                          _get$2(_get_prototype_of$3(AgreementsDialog.prototype), "onBridgeMessageHandler", this).call(this, event);
                          break;
                  }
              }
          }
      ]);
      return AgreementsDialog;
  }(Widget);

  exports.OAuthName = void 0;
  (function(OAuthName) {
      OAuthName["OK"] = "ok_ru";
      OAuthName["MAIL"] = "mail_ru";
      OAuthName["VK"] = "vkid";
  })(exports.OAuthName || (exports.OAuthName = {}));

  function _define_property$8(obj, key, value) {
      if (key in obj) {
          Object.defineProperty(obj, key, {
              value: value,
              enumerable: true,
              configurable: true,
              writable: true
          });
      } else {
          obj[key] = value;
      }
      return obj;
  }
  var _obj$6;
  var OAuthNameText = (_obj$6 = {}, _define_property$8(_obj$6, exports.OAuthName.OK, "OK"), _define_property$8(_obj$6, exports.OAuthName.MAIL, "Mail.ru"), _define_property$8(_obj$6, exports.OAuthName.VK, "VK ID"), _obj$6);

  function _define_property$7(obj, key, value) {
      if (key in obj) {
          Object.defineProperty(obj, key, {
              value: value,
              enumerable: true,
              configurable: true,
              writable: true
          });
      } else {
          obj[key] = value;
      }
      return obj;
  }
  var _obj$5;
  var linkTextLang = (_obj$5 = {}, _define_property$7(_obj$5, exports.Languages.RUS, "или войти через VK\xa0ID\xa0с использованием данных из\xa0сервиса"), _define_property$7(_obj$5, exports.Languages.UKR, "або увійти через VK\xa0ID\xa0з використанням даних із\xa0сервісу"), _define_property$7(_obj$5, exports.Languages.ENG, "or\xa0sign\xa0in with VK\xa0ID\xa0using information from a\xa0service"), _define_property$7(_obj$5, exports.Languages.SPA, "o\xa0iniciar sesi\xf3n con\xa0VK\xa0ID utilizando la informaci\xf3n de\xa0un\xa0servicio"), _define_property$7(_obj$5, exports.Languages.GERMAN, "oder melden Sie sich mit\xa0Ihrer\xa0VK-ID an, indem Sie Informationen aus dem\xa0Dienst verwenden"), _define_property$7(_obj$5, exports.Languages.POL, "lub wejdź poprzez VK\xa0ID\xa0przy użyciu danych z\xa0serwisu"), _define_property$7(_obj$5, exports.Languages.FRA, "ou se connecter avec VK\xa0ID\xa0en utilisant les\xa0informations d'un\xa0service"), _define_property$7(_obj$5, exports.Languages.TURKEY, "Ya\xa0da hizmetteki verileri kullanarak\xa0VK\xa0ID hizmeti yardımıyla gir"), _obj$5);
  var _obj1$3, _obj2$1;
  var singleButtonText = (_obj2$1 = {}, _define_property$7(_obj2$1, exports.Languages.RUS, (_obj1$3 = {}, _define_property$7(_obj1$3, exports.OAuthName.OK, "Войти через OK"), _define_property$7(_obj1$3, exports.OAuthName.MAIL, "Войти с Почтой Mail.ru"), _define_property$7(_obj1$3, exports.OAuthName.VK, "Войти с VK ID"), _obj1$3)), _define_property$7(_obj2$1, exports.Languages.UKR, "Увійти з {provider}"), _define_property$7(_obj2$1, exports.Languages.ENG, "Sign in with {provider}"), _define_property$7(_obj2$1, exports.Languages.SPA, "Iniciar sesi\xf3n con {provider}"), _define_property$7(_obj2$1, exports.Languages.GERMAN, "Mit {provider} anmelden"), _define_property$7(_obj2$1, exports.Languages.POL, "Zaloguj się z {provider}"), _define_property$7(_obj2$1, exports.Languages.FRA, "Se connecter avec {provider}"), _define_property$7(_obj2$1, exports.Languages.TURKEY, "{provider}'den gir"), _obj2$1);

  function _define_property$6(obj, key, value) {
      if (key in obj) {
          Object.defineProperty(obj, key, {
              value: value,
              enumerable: true,
              configurable: true,
              writable: true
          });
      } else {
          obj[key] = value;
      }
      return obj;
  }
  var spinnerSvg$2 = '\n  <svg width="28" height="28" viewBox="0 0 28 28" fill="none" xmlns="http://www.w3.org/2000/svg">\n    <path d="M14 22C13.4477 22 13 21.5523 13 21C13 20.4477 13.4477 20 14 20C17.3137 20 20 17.3137 20 14C20 10.6863 17.3137 8 14 8C10.6863 8 8 10.6863 8 14C8 14.6472 8.10214 15.2793 8.3002 15.8802C8.4731 16.4047 8.18807 16.9701 7.66355 17.143C7.13902 17.3159 6.57365 17.0308 6.40074 16.5063C6.13628 15.7041 6 14.8606 6 14C6 9.58172 9.58172 6 14 6C18.4183 6 22 9.58172 22 14C22 18.4183 18.4183 22 14 22Z" fill="currentColor"/>\n  </svg>\n';
  var _obj$4;
  var OAuthIconMap = (_obj$4 = {}, _define_property$6(_obj$4, exports.OAuthName.VK, function(size) {
      return '\n<svg width="'.concat(size + 1, '" height="').concat(size, '" viewBox="0 0 29 28" fill="none" xmlns="http://www.w3.org/2000/svg">\n  <path d="M3.33331 13.56C3.33331 8.58197 3.33331 6.09295 4.87979 4.54648C6.42627 3 8.91528 3 13.8933 3H14.7733C19.7513 3 22.2404 3 23.7868 4.54648C25.3333 6.09295 25.3333 8.58197 25.3333 13.56V14.44C25.3333 19.418 25.3333 21.907 23.7868 23.4535C22.2404 25 19.7513 25 14.7733 25H13.8933C8.91528 25 6.42627 25 4.87979 23.4535C3.33331 21.907 3.33331 19.418 3.33331 14.44V13.56Z" fill="#0077FF" style="fill:#0077FF;fill:color(display-p3 0.0000 0.4667 1.0000);fill-opacity:1;"/>\n  <path d="M15.0398 18.9C10.0174 18.9 7.15269 15.4466 7.03333 9.70001H9.54912C9.63175 13.9178 11.4864 15.7044 12.9555 16.0728V9.70001H15.3245V13.3376C16.7752 13.1811 18.2992 11.5234 18.8134 9.70001H21.1823C20.7875 11.9471 19.1348 13.6047 17.9595 14.2862C19.1348 14.8387 21.0171 16.2846 21.7333 18.9H19.1256C18.5655 17.1503 17.17 15.7965 15.3245 15.6123V18.9H15.0398Z" fill="white" style="fill:white;fill:white;fill-opacity:1;"/>\n</svg>\n  ');
  }), _define_property$6(_obj$4, exports.OAuthName.OK, function(size) {
      return '\n<svg width="'.concat(size, '" height="').concat(size, '" viewBox="0 0 28 28" fill="none" xmlns="http://www.w3.org/2000/svg">\n  <path fill-rule="evenodd" clip-rule="evenodd" d="M3.67554 3.67638C2 5.36482 2 8.09045 2 13.5176V14.4824C2 19.9216 2 22.6352 3.68759 24.3236C5.37519 26 8.09944 26 13.5238 26H14.4882C19.9126 26 22.6489 26 24.3245 24.3236C26 22.6352 26 19.9095 26 14.4824V13.5176C26 8.09045 26 5.35276 24.3245 3.67638C22.6369 2 19.9126 2 14.4882 2H13.5239C8.08739 2 5.37519 2 3.67554 3.67638Z" fill="#EE8208" style="fill:#EE8208;fill:color(display-p3 0.9333 0.5098 0.0314);fill-opacity:1;"/>\n  <path fill-rule="evenodd" clip-rule="evenodd" d="M17.1157 12.621C16.3239 13.4108 15.218 13.9122 13.999 13.9122C12.7926 13.9122 11.6741 13.4108 10.8823 12.621C10.0906 11.8313 9.58793 10.7407 9.58793 9.51224C9.58793 8.28377 10.0906 7.18065 10.8823 6.40345C11.6741 5.61372 12.78 5.1123 13.999 5.1123C15.218 5.1123 16.3239 5.61372 17.1157 6.40345C17.9074 7.19319 18.4101 8.2963 18.4101 9.51224C18.4101 10.7282 17.9074 11.8313 17.1157 12.621ZM14.0116 7.49404C13.4586 7.49404 12.9559 7.71967 12.5915 8.0832C12.2396 8.44673 12.0008 8.94814 12.0008 9.4997C12.0008 10.0513 12.227 10.5527 12.5915 10.9162C12.9559 11.2797 13.446 11.5054 14.0116 11.5054C14.5645 11.5054 15.0672 11.2797 15.4317 10.9162C15.7961 10.5527 16.0223 10.0638 16.0223 9.4997C16.0223 8.94814 15.7961 8.44673 15.4317 8.0832C15.0672 7.71967 14.5771 7.49404 14.0116 7.49404Z" fill="white" style="fill:white;fill:white;fill-opacity:1;"/>\n  <path d="M18.6614 13.9247L19.9558 15.6922C20.0312 15.7799 20.0187 15.8927 19.8553 15.968C18.762 16.8705 17.4927 17.4471 16.1731 17.7605L18.9128 22.5741C18.9882 22.7246 18.9002 22.8875 18.7368 22.8875H16.06C15.9721 22.8875 15.8967 22.8248 15.8715 22.7496L13.9613 18.4876L12.0511 22.7496C12.026 22.8374 11.9506 22.8875 11.8626 22.8875H9.1858C9.03499 22.8875 8.93445 22.712 9.00986 22.5741L11.7495 17.7605C10.4299 17.4471 9.16066 16.8454 8.06732 15.968C7.99192 15.8927 7.97935 15.7799 8.04219 15.6922L9.3366 13.9247C9.412 13.8369 9.56281 13.8244 9.65078 13.8996C10.8824 14.9401 12.3779 15.617 13.999 15.617C15.6202 15.617 17.1282 14.9401 18.3472 13.8996C18.4352 13.8119 18.586 13.8244 18.6614 13.9247Z" fill="white" style="fill:white;fill:white;fill-opacity:1;"/>\n</svg>\n  ');
  }), _define_property$6(_obj$4, exports.OAuthName.MAIL, function(size) {
      return '\n<svg width="'.concat(size + 1, '" height="').concat(size, '" viewBox="0 0 29 28" fill="none" xmlns="http://www.w3.org/2000/svg">\n  <g clip-path="url(#clip0_217_2730)">\n  <path d="M14.6667 28C22.3987 28 28.6667 21.732 28.6667 14C28.6667 6.26801 22.3987 0 14.6667 0C6.9347 0 0.666687 6.26801 0.666687 14C0.666687 21.732 6.9347 28 14.6667 28Z" fill="#005FF9" style="fill:#005FF9;fill:color(display-p3 0.0000 0.3725 0.9765);fill-opacity:1;"/>\n  <path d="M17.2957 14C17.2957 14.52 17.1415 15.0283 16.8526 15.4606C16.5637 15.8929 16.1531 16.2299 15.6728 16.4289C15.1924 16.6279 14.6638 16.6799 14.1538 16.5785C13.6438 16.477 13.1754 16.2267 12.8077 15.859C12.44 15.4913 12.1896 15.0229 12.0882 14.5129C11.9868 14.0029 12.0388 13.4743 12.2378 12.9939C12.4368 12.5135 12.7738 12.1029 13.2061 11.8141C13.6384 11.5252 14.1467 11.371 14.6667 11.371C15.3637 11.3718 16.0319 11.649 16.5248 12.1419C17.0177 12.6348 17.2949 13.303 17.2957 14ZM14.6667 5.259C13.2982 5.25874 11.9487 5.57982 10.7269 6.19638C9.50514 6.81295 8.44522 7.70778 7.63246 8.80882C6.81971 9.90987 6.27684 11.1864 6.04756 12.5356C5.81828 13.8847 5.909 15.2689 6.31241 16.5766C6.71581 17.8844 7.42064 19.0791 8.37015 20.0646C9.31966 21.0502 10.4873 21.799 11.7791 22.2509C13.0709 22.7027 14.4507 22.8449 15.8075 22.666C17.1643 22.4871 18.4601 21.9922 19.5907 21.221L19.6157 21.203L18.4377 19.834L18.4187 19.847C17.0632 20.7181 15.4476 21.092 13.8472 20.9048C12.2469 20.7177 10.7611 19.9811 9.64324 18.8207C8.52539 17.6603 7.84476 16.1481 7.71745 14.5419C7.59015 12.9357 8.02406 11.3351 8.94516 10.0131C9.86627 8.69111 11.2175 7.72965 12.7684 7.29274C14.3192 6.85582 15.9736 6.97052 17.4494 7.61725C18.9251 8.26399 20.1308 9.40269 20.8606 10.8391C21.5905 12.2756 21.7994 13.9207 21.4517 15.494C21.4123 15.8149 21.2547 16.1096 21.0097 16.3206C20.7647 16.5315 20.4499 16.6436 20.1267 16.635C19.9786 16.6249 19.834 16.5855 19.7013 16.5189C19.5686 16.4524 19.4505 16.3602 19.3538 16.2476C19.2571 16.135 19.1838 16.0042 19.1381 15.863C19.0924 15.7218 19.0753 15.5729 19.0877 15.425V14C19.089 12.975 18.7346 11.9813 18.085 11.1885C17.4354 10.3957 16.5308 9.85284 15.5255 9.6526C14.5203 9.45236 13.4768 9.60713 12.5729 10.0905C11.6691 10.5739 10.961 11.3559 10.5694 12.3032C10.1779 13.2504 10.1272 14.3042 10.4259 15.2847C10.7247 16.2651 11.3544 17.1116 12.2076 17.6795C13.0609 18.2475 14.0847 18.5018 15.1045 18.399C16.1244 18.2962 17.0769 17.8428 17.7997 17.116C18.0374 17.4875 18.3585 17.7985 18.7375 18.0241C19.1164 18.2498 19.5428 18.384 19.9827 18.416C20.0607 18.423 20.1397 18.426 20.2187 18.426C20.8595 18.4243 21.4824 18.2136 21.9927 17.826C22.5342 17.4031 22.9298 16.8212 23.1237 16.162C23.1577 16.051 23.2237 15.795 23.2237 15.794V15.784C23.3539 15.1985 23.4156 14.5998 23.4077 14C23.405 11.6826 22.4833 9.46079 20.8446 7.82211C19.2059 6.18342 16.9841 5.26165 14.6667 5.259Z" fill="#FF9E00" style="fill:#FF9E00;fill:color(display-p3 1.0000 0.6196 0.0000);fill-opacity:1;"/>\n  </g>\n  <defs>\n  <clipPath id="clip0_217_2730">\n  <rect width="28" height="28" fill="white" style="fill:white;fill:white;fill-opacity:1;" transform="translate(0.666687)"/>\n  </clipPath>\n  </defs>\n</svg>\n  ');
  }), _obj$4);
  var defaultStylesParams$1 = {
      height: 44,
      borderRadius: 8
  };
  var getOAuthListTemplate = function(params) {
      return function(id) {
          var lang = params.lang || exports.Languages.RUS;
          var scheme = params.scheme || "light";
          var borderRadius = params.borderRadius || defaultStylesParams$1.borderRadius;
          var height = params.height || defaultStylesParams$1.height;
          var isonSize = height < 40 ? 24 : 28;
          var paddingSize = height < 40 ? 6 : height < 48 ? 8 : 12;
          var oauthListItems = params.oauthList.map(function(oauth) {
              var singleButtonTextLang = lang === exports.Languages.RUS ? singleButtonText[lang][oauth] : "".concat(singleButtonText[lang].replace("{provider}", OAuthNameText[oauth]));
              return '\n      <div class="VkIdSdk_oauth_item" data-oauth="'.concat(oauth, '">\n        ').concat(OAuthIconMap[oauth](isonSize), '\n        <div class="VkIdSdk_oauth_button_text">').concat(singleButtonTextLang, "</div>\n      </div>\n    ");
          }).join("");
          var handleLoaded = function() {
              var textDiv = document.querySelector("#".concat(id, " .VkIdSdk_oauth_button_text"));
              var oauthItemDiv = document.querySelector("#".concat(id, " .VkIdSdk_oauth_item"));
              if (!textDiv || !oauthItemDiv) {
                  return;
              }
              var shouldHideText = textDiv.clientWidth >= oauthItemDiv.clientWidth - isonSize * 2 - 32 - paddingSize * 2;
              if (shouldHideText) {
                  var _document_querySelector;
                  (_document_querySelector = document.querySelector("#".concat(id, " .VkIdSdk_oauth_list"))) === null || _document_querySelector === void 0 ? void 0 : _document_querySelector.removeAttribute("data-single-mode");
              }
          };
          if (document.readyState === "loading") {
              document.addEventListener("DOMContentLoaded", handleLoaded);
          } else {
              setTimeout(handleLoaded, 0);
          }
          var isSingleMode = params.oauthList.length === 1 ? "data-single-mode" : "";
          var linkText = linkTextLang[lang];
          return '\n    <div id="'.concat(id, '" class="VkIdSdk_oauth_container" data-test-id="oauthList" data-scheme="').concat(scheme, '">\n      <style>\n        :root #').concat(id, "[data-scheme=light] {\n          --oauthlist--item_border_color: rgba(0, 0, 0, .12);\n          --oauthlist--color_text_secondary: #818c99;\n          --oauthlist--color_text_primary: #000;\n        }\n\n        :root #").concat(id, "[data-scheme=dark] {\n          --oauthlist--item_border_color: rgba(255, 255, 255, 0.12);\n          --oauthlist--color_text_secondary: #76787a;\n          --oauthlist--color_text_primary: #e1e3e6;\n        }\n\n        #").concat(id, ".VkIdSdk_oauth_container {\n          position: relative;\n        }\n\n        #").concat(id, " .VkIdSdk_oauth_list {\n          display: flex;\n          height: ").concat(height, "px;\n        }\n\n        #").concat(id, " .VkIdSdk_oauth_item {\n          position: relative;\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          padding: ").concat(paddingSize, "px;\n          margin-right: 12px;\n          width: 100%;\n          border: 1px solid var(--oauthlist--item_border_color);\n          border-radius: ").concat(borderRadius, "px;\n          cursor: pointer;\n        }\n\n        #").concat(id, " .VkIdSdk_oauth_item:last-child {\n          margin-right: 0;\n        }\n\n        #").concat(id, ' .VkIdSdk_oauth_link_text {\n          display: flex;\n          font-family: -apple-system, system-ui, "Helvetica Neue", Roboto, sans-serif;\n          color: var(--oauthlist--color_text_secondary);\n          font-size: 13px;\n          line-height: 16px;\n          margin-bottom: 16px;\n          justify-content: center;\n          text-align: center;\n        }\n\n        #').concat(id, " .VkIdSdk_spinner {\n          position: absolute;\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          width: 100%;\n          height: 100%;\n          background: #fff;\n        }\n\n        #").concat(id, "[data-state=loaded] .VkIdSdk_spinner {\n          transition: .2s;\n          opacity: 0;\n          pointer-events: none;\n        }\n\n        #").concat(id, " .VkIdSdk_spinner > svg {\n          animation: vkIdSdkButtonSpinner 0.7s linear infinite;\n        }\n\n        #").concat(id, ' .VkIdSdk_oauth_button_text {\n          display: none;\n          font-family: -apple-system, system-ui, "Helvetica Neue", Roboto, sans-serif;\n          color: var(--oauthlist--color_text_primary);\n        }\n\n        #').concat(id, " .VkIdSdk_oauth_list[data-single-mode] .VkIdSdk_oauth_item svg {\n          position: absolute;\n          left: 16px;\n        }\n\n        #").concat(id, ' .VkIdSdk_oauth_list[data-single-mode] .VkIdSdk_oauth_button_text {\n          display: block;\n        }\n\n        @keyframes vkIdSdkButtonSpinner {\n          0% {\n            transform: rotate(0deg);\n          }\n          100% {\n            transform: rotate(360deg);\n          }\n        }\n      </style>\n      <div class="VkIdSdk_spinner">\n        ').concat(spinnerSvg$2, '\n      </div>\n      <div class="VkIdSdk_oauth_link_text">').concat(linkText, '</div>\n      <div class="VkIdSdk_oauth_list" ').concat(isSingleMode, ">").concat(oauthListItems, "</div>\n    </div>\n  ");
      };
  };

  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  function _assert_this_initialized$2(self) {
      if (self === void 0) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
  }
  function _class_call_check$2(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
      }
  }
  function _defineProperties$2(target, props) {
      for(var i = 0; i < props.length; i++){
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor) descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
      }
  }
  function _create_class$2(Constructor, protoProps, staticProps) {
      if (protoProps) _defineProperties$2(Constructor.prototype, protoProps);
      if (staticProps) _defineProperties$2(Constructor, staticProps);
      return Constructor;
  }
  function _get_prototype_of$2(o) {
      _get_prototype_of$2 = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o) {
          return o.__proto__ || Object.getPrototypeOf(o);
      };
      return _get_prototype_of$2(o);
  }
  function _inherits$2(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
              value: subClass,
              writable: true,
              configurable: true
          }
      });
      if (superClass) _set_prototype_of$2(subClass, superClass);
  }
  function _possible_constructor_return$2(self, call) {
      if (call && (_type_of$2(call) === "object" || typeof call === "function")) {
          return call;
      }
      return _assert_this_initialized$2(self);
  }
  function _set_prototype_of$2(o, p) {
      _set_prototype_of$2 = Object.setPrototypeOf || function setPrototypeOf(o, p) {
          o.__proto__ = p;
          return o;
      };
      return _set_prototype_of$2(o, p);
  }
  function _type_of$2(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
  }
  function _is_native_reflect_construct$2() {
      if (typeof Reflect === "undefined" || !Reflect.construct) return false;
      if (Reflect.construct.sham) return false;
      if (typeof Proxy === "function") return true;
      try {
          Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
          return true;
      } catch (e) {
          return false;
      }
  }
  function _create_super$2(Derived) {
      var hasNativeReflectConstruct = _is_native_reflect_construct$2();
      return function _createSuperInternal() {
          var Super = _get_prototype_of$2(Derived), result;
          if (hasNativeReflectConstruct) {
              var NewTarget = _get_prototype_of$2(this).constructor;
              result = Reflect.construct(Super, arguments, NewTarget);
          } else {
              result = Super.apply(this, arguments);
          }
          return _possible_constructor_return$2(this, result);
      };
  }
  function _ts_decorate$2(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
      else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
      return c > 3 && r && Object.defineProperty(target, key, r), r;
  }
  var OAuthList = /*#__PURE__*/ function(Widget) {
      _inherits$2(OAuthList, Widget);
      var _super = _create_super$2(OAuthList);
      function OAuthList() {
          _class_call_check$2(this, OAuthList);
          return _super.apply(this, arguments);
      }
      _create_class$2(OAuthList, [
          {
              key: "render",
              value: function render(params) {
                  var _params_styles, _params_styles1;
                  this.templateRenderer = getOAuthListTemplate({
                      lang: params.lang,
                      oauthList: params.oauthList,
                      height: (_params_styles = params.styles) === null || _params_styles === void 0 ? void 0 : _params_styles.height,
                      borderRadius: (_params_styles1 = params.styles) === null || _params_styles1 === void 0 ? void 0 : _params_styles1.borderRadius,
                      scheme: params.scheme
                  });
                  this.container = params.container;
                  this.renderTemplate();
                  this.registerElements();
                  this.setState(WidgetState.LOADED);
                  this.elements.root.addEventListener("click", this.handleClick.bind(this));
                  return this;
              }
          },
          {
              key: "handleClick",
              value: function handleClick(e) {
                  var target = e.target.closest("[data-oauth]");
                  if (!target) {
                      return;
                  }
                  var oauth = target.getAttribute("data-oauth");
                  OAuthList.__auth.login({
                      action: {
                          name: "sdk_oauth",
                          params: {
                              oauth: oauth
                          }
                      }
                  });
              }
          }
      ]);
      return OAuthList;
  }(Widget);
  _ts_decorate$2([
      validator({
          oauthList: [
              isNotEmptyOAuthList
          ]
      })
  ], OAuthList.prototype, "render", null);

  var OneTapInternalEvents;
  (function(OneTapInternalEvents) {
      OneTapInternalEvents["LOGIN_SUCCESS"] = "onetap: success login";
      OneTapInternalEvents["SHOW_FULL_AUTH"] = "onetap: show full auth";
      OneTapInternalEvents["SHOW_AGREEMENTS_DIALOG"] = "onetap: show agreements dialog";
      OneTapInternalEvents["START_AUTHORIZE"] = "onetap: start authorize";
      OneTapInternalEvents["NOT_AUTHORIZED"] = "onetap: not authorized";
  })(OneTapInternalEvents || (OneTapInternalEvents = {}));

  /**
   * A collection of shims that provide minimal functionality of the ES6 collections.
   *
   * These implementations are not meant to be used outside of the ResizeObserver
   * modules as they cover only a limited range of use cases.
   */
  /* eslint-disable require-jsdoc, valid-jsdoc */
  var MapShim = (function () {
      if (typeof Map !== 'undefined') {
          return Map;
      }
      /**
       * Returns index in provided array that matches the specified key.
       *
       * @param {Array<Array>} arr
       * @param {*} key
       * @returns {number}
       */
      function getIndex(arr, key) {
          var result = -1;
          arr.some(function (entry, index) {
              if (entry[0] === key) {
                  result = index;
                  return true;
              }
              return false;
          });
          return result;
      }
      return /** @class */ (function () {
          function class_1() {
              this.__entries__ = [];
          }
          Object.defineProperty(class_1.prototype, "size", {
              /**
               * @returns {boolean}
               */
              get: function () {
                  return this.__entries__.length;
              },
              enumerable: true,
              configurable: true
          });
          /**
           * @param {*} key
           * @returns {*}
           */
          class_1.prototype.get = function (key) {
              var index = getIndex(this.__entries__, key);
              var entry = this.__entries__[index];
              return entry && entry[1];
          };
          /**
           * @param {*} key
           * @param {*} value
           * @returns {void}
           */
          class_1.prototype.set = function (key, value) {
              var index = getIndex(this.__entries__, key);
              if (~index) {
                  this.__entries__[index][1] = value;
              }
              else {
                  this.__entries__.push([key, value]);
              }
          };
          /**
           * @param {*} key
           * @returns {void}
           */
          class_1.prototype.delete = function (key) {
              var entries = this.__entries__;
              var index = getIndex(entries, key);
              if (~index) {
                  entries.splice(index, 1);
              }
          };
          /**
           * @param {*} key
           * @returns {void}
           */
          class_1.prototype.has = function (key) {
              return !!~getIndex(this.__entries__, key);
          };
          /**
           * @returns {void}
           */
          class_1.prototype.clear = function () {
              this.__entries__.splice(0);
          };
          /**
           * @param {Function} callback
           * @param {*} [ctx=null]
           * @returns {void}
           */
          class_1.prototype.forEach = function (callback, ctx) {
              if (ctx === void 0) { ctx = null; }
              for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {
                  var entry = _a[_i];
                  callback.call(ctx, entry[1], entry[0]);
              }
          };
          return class_1;
      }());
  })();

  /**
   * Detects whether window and document objects are available in current environment.
   */
  var isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;

  // Returns global object of a current environment.
  var global$1 = (function () {
      if (typeof global !== 'undefined' && global.Math === Math) {
          return global;
      }
      if (typeof self !== 'undefined' && self.Math === Math) {
          return self;
      }
      if (typeof window !== 'undefined' && window.Math === Math) {
          return window;
      }
      // eslint-disable-next-line no-new-func
      return Function('return this')();
  })();

  /**
   * A shim for the requestAnimationFrame which falls back to the setTimeout if
   * first one is not supported.
   *
   * @returns {number} Requests' identifier.
   */
  var requestAnimationFrame$1 = (function () {
      if (typeof requestAnimationFrame === 'function') {
          // It's required to use a bounded function because IE sometimes throws
          // an "Invalid calling object" error if rAF is invoked without the global
          // object on the left hand side.
          return requestAnimationFrame.bind(global$1);
      }
      return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };
  })();

  // Defines minimum timeout before adding a trailing call.
  var trailingTimeout = 2;
  /**
   * Creates a wrapper function which ensures that provided callback will be
   * invoked only once during the specified delay period.
   *
   * @param {Function} callback - Function to be invoked after the delay period.
   * @param {number} delay - Delay after which to invoke callback.
   * @returns {Function}
   */
  function throttle (callback, delay) {
      var leadingCall = false, trailingCall = false, lastCallTime = 0;
      /**
       * Invokes the original callback function and schedules new invocation if
       * the "proxy" was called during current request.
       *
       * @returns {void}
       */
      function resolvePending() {
          if (leadingCall) {
              leadingCall = false;
              callback();
          }
          if (trailingCall) {
              proxy();
          }
      }
      /**
       * Callback invoked after the specified delay. It will further postpone
       * invocation of the original function delegating it to the
       * requestAnimationFrame.
       *
       * @returns {void}
       */
      function timeoutCallback() {
          requestAnimationFrame$1(resolvePending);
      }
      /**
       * Schedules invocation of the original function.
       *
       * @returns {void}
       */
      function proxy() {
          var timeStamp = Date.now();
          if (leadingCall) {
              // Reject immediately following calls.
              if (timeStamp - lastCallTime < trailingTimeout) {
                  return;
              }
              // Schedule new call to be in invoked when the pending one is resolved.
              // This is important for "transitions" which never actually start
              // immediately so there is a chance that we might miss one if change
              // happens amids the pending invocation.
              trailingCall = true;
          }
          else {
              leadingCall = true;
              trailingCall = false;
              setTimeout(timeoutCallback, delay);
          }
          lastCallTime = timeStamp;
      }
      return proxy;
  }

  // Minimum delay before invoking the update of observers.
  var REFRESH_DELAY = 20;
  // A list of substrings of CSS properties used to find transition events that
  // might affect dimensions of observed elements.
  var transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];
  // Check if MutationObserver is available.
  var mutationObserverSupported = typeof MutationObserver !== 'undefined';
  /**
   * Singleton controller class which handles updates of ResizeObserver instances.
   */
  var ResizeObserverController = /** @class */ (function () {
      /**
       * Creates a new instance of ResizeObserverController.
       *
       * @private
       */
      function ResizeObserverController() {
          /**
           * Indicates whether DOM listeners have been added.
           *
           * @private {boolean}
           */
          this.connected_ = false;
          /**
           * Tells that controller has subscribed for Mutation Events.
           *
           * @private {boolean}
           */
          this.mutationEventsAdded_ = false;
          /**
           * Keeps reference to the instance of MutationObserver.
           *
           * @private {MutationObserver}
           */
          this.mutationsObserver_ = null;
          /**
           * A list of connected observers.
           *
           * @private {Array<ResizeObserverSPI>}
           */
          this.observers_ = [];
          this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);
          this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);
      }
      /**
       * Adds observer to observers list.
       *
       * @param {ResizeObserverSPI} observer - Observer to be added.
       * @returns {void}
       */
      ResizeObserverController.prototype.addObserver = function (observer) {
          if (!~this.observers_.indexOf(observer)) {
              this.observers_.push(observer);
          }
          // Add listeners if they haven't been added yet.
          if (!this.connected_) {
              this.connect_();
          }
      };
      /**
       * Removes observer from observers list.
       *
       * @param {ResizeObserverSPI} observer - Observer to be removed.
       * @returns {void}
       */
      ResizeObserverController.prototype.removeObserver = function (observer) {
          var observers = this.observers_;
          var index = observers.indexOf(observer);
          // Remove observer if it's present in registry.
          if (~index) {
              observers.splice(index, 1);
          }
          // Remove listeners if controller has no connected observers.
          if (!observers.length && this.connected_) {
              this.disconnect_();
          }
      };
      /**
       * Invokes the update of observers. It will continue running updates insofar
       * it detects changes.
       *
       * @returns {void}
       */
      ResizeObserverController.prototype.refresh = function () {
          var changesDetected = this.updateObservers_();
          // Continue running updates if changes have been detected as there might
          // be future ones caused by CSS transitions.
          if (changesDetected) {
              this.refresh();
          }
      };
      /**
       * Updates every observer from observers list and notifies them of queued
       * entries.
       *
       * @private
       * @returns {boolean} Returns "true" if any observer has detected changes in
       *      dimensions of it's elements.
       */
      ResizeObserverController.prototype.updateObservers_ = function () {
          // Collect observers that have active observations.
          var activeObservers = this.observers_.filter(function (observer) {
              return observer.gatherActive(), observer.hasActive();
          });
          // Deliver notifications in a separate cycle in order to avoid any
          // collisions between observers, e.g. when multiple instances of
          // ResizeObserver are tracking the same element and the callback of one
          // of them changes content dimensions of the observed target. Sometimes
          // this may result in notifications being blocked for the rest of observers.
          activeObservers.forEach(function (observer) { return observer.broadcastActive(); });
          return activeObservers.length > 0;
      };
      /**
       * Initializes DOM listeners.
       *
       * @private
       * @returns {void}
       */
      ResizeObserverController.prototype.connect_ = function () {
          // Do nothing if running in a non-browser environment or if listeners
          // have been already added.
          if (!isBrowser || this.connected_) {
              return;
          }
          // Subscription to the "Transitionend" event is used as a workaround for
          // delayed transitions. This way it's possible to capture at least the
          // final state of an element.
          document.addEventListener('transitionend', this.onTransitionEnd_);
          window.addEventListener('resize', this.refresh);
          if (mutationObserverSupported) {
              this.mutationsObserver_ = new MutationObserver(this.refresh);
              this.mutationsObserver_.observe(document, {
                  attributes: true,
                  childList: true,
                  characterData: true,
                  subtree: true
              });
          }
          else {
              document.addEventListener('DOMSubtreeModified', this.refresh);
              this.mutationEventsAdded_ = true;
          }
          this.connected_ = true;
      };
      /**
       * Removes DOM listeners.
       *
       * @private
       * @returns {void}
       */
      ResizeObserverController.prototype.disconnect_ = function () {
          // Do nothing if running in a non-browser environment or if listeners
          // have been already removed.
          if (!isBrowser || !this.connected_) {
              return;
          }
          document.removeEventListener('transitionend', this.onTransitionEnd_);
          window.removeEventListener('resize', this.refresh);
          if (this.mutationsObserver_) {
              this.mutationsObserver_.disconnect();
          }
          if (this.mutationEventsAdded_) {
              document.removeEventListener('DOMSubtreeModified', this.refresh);
          }
          this.mutationsObserver_ = null;
          this.mutationEventsAdded_ = false;
          this.connected_ = false;
      };
      /**
       * "Transitionend" event handler.
       *
       * @private
       * @param {TransitionEvent} event
       * @returns {void}
       */
      ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {
          var _b = _a.propertyName, propertyName = _b === void 0 ? '' : _b;
          // Detect whether transition may affect dimensions of an element.
          var isReflowProperty = transitionKeys.some(function (key) {
              return !!~propertyName.indexOf(key);
          });
          if (isReflowProperty) {
              this.refresh();
          }
      };
      /**
       * Returns instance of the ResizeObserverController.
       *
       * @returns {ResizeObserverController}
       */
      ResizeObserverController.getInstance = function () {
          if (!this.instance_) {
              this.instance_ = new ResizeObserverController();
          }
          return this.instance_;
      };
      /**
       * Holds reference to the controller's instance.
       *
       * @private {ResizeObserverController}
       */
      ResizeObserverController.instance_ = null;
      return ResizeObserverController;
  }());

  /**
   * Defines non-writable/enumerable properties of the provided target object.
   *
   * @param {Object} target - Object for which to define properties.
   * @param {Object} props - Properties to be defined.
   * @returns {Object} Target object.
   */
  var defineConfigurable = (function (target, props) {
      for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {
          var key = _a[_i];
          Object.defineProperty(target, key, {
              value: props[key],
              enumerable: false,
              writable: false,
              configurable: true
          });
      }
      return target;
  });

  /**
   * Returns the global object associated with provided element.
   *
   * @param {Object} target
   * @returns {Object}
   */
  var getWindowOf = (function (target) {
      // Assume that the element is an instance of Node, which means that it
      // has the "ownerDocument" property from which we can retrieve a
      // corresponding global object.
      var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;
      // Return the local global object if it's not possible extract one from
      // provided element.
      return ownerGlobal || global$1;
  });

  // Placeholder of an empty content rectangle.
  var emptyRect = createRectInit(0, 0, 0, 0);
  /**
   * Converts provided string to a number.
   *
   * @param {number|string} value
   * @returns {number}
   */
  function toFloat(value) {
      return parseFloat(value) || 0;
  }
  /**
   * Extracts borders size from provided styles.
   *
   * @param {CSSStyleDeclaration} styles
   * @param {...string} positions - Borders positions (top, right, ...)
   * @returns {number}
   */
  function getBordersSize(styles) {
      var positions = [];
      for (var _i = 1; _i < arguments.length; _i++) {
          positions[_i - 1] = arguments[_i];
      }
      return positions.reduce(function (size, position) {
          var value = styles['border-' + position + '-width'];
          return size + toFloat(value);
      }, 0);
  }
  /**
   * Extracts paddings sizes from provided styles.
   *
   * @param {CSSStyleDeclaration} styles
   * @returns {Object} Paddings box.
   */
  function getPaddings(styles) {
      var positions = ['top', 'right', 'bottom', 'left'];
      var paddings = {};
      for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {
          var position = positions_1[_i];
          var value = styles['padding-' + position];
          paddings[position] = toFloat(value);
      }
      return paddings;
  }
  /**
   * Calculates content rectangle of provided SVG element.
   *
   * @param {SVGGraphicsElement} target - Element content rectangle of which needs
   *      to be calculated.
   * @returns {DOMRectInit}
   */
  function getSVGContentRect(target) {
      var bbox = target.getBBox();
      return createRectInit(0, 0, bbox.width, bbox.height);
  }
  /**
   * Calculates content rectangle of provided HTMLElement.
   *
   * @param {HTMLElement} target - Element for which to calculate the content rectangle.
   * @returns {DOMRectInit}
   */
  function getHTMLElementContentRect(target) {
      // Client width & height properties can't be
      // used exclusively as they provide rounded values.
      var clientWidth = target.clientWidth, clientHeight = target.clientHeight;
      // By this condition we can catch all non-replaced inline, hidden and
      // detached elements. Though elements with width & height properties less
      // than 0.5 will be discarded as well.
      //
      // Without it we would need to implement separate methods for each of
      // those cases and it's not possible to perform a precise and performance
      // effective test for hidden elements. E.g. even jQuery's ':visible' filter
      // gives wrong results for elements with width & height less than 0.5.
      if (!clientWidth && !clientHeight) {
          return emptyRect;
      }
      var styles = getWindowOf(target).getComputedStyle(target);
      var paddings = getPaddings(styles);
      var horizPad = paddings.left + paddings.right;
      var vertPad = paddings.top + paddings.bottom;
      // Computed styles of width & height are being used because they are the
      // only dimensions available to JS that contain non-rounded values. It could
      // be possible to utilize the getBoundingClientRect if only it's data wasn't
      // affected by CSS transformations let alone paddings, borders and scroll bars.
      var width = toFloat(styles.width), height = toFloat(styles.height);
      // Width & height include paddings and borders when the 'border-box' box
      // model is applied (except for IE).
      if (styles.boxSizing === 'border-box') {
          // Following conditions are required to handle Internet Explorer which
          // doesn't include paddings and borders to computed CSS dimensions.
          //
          // We can say that if CSS dimensions + paddings are equal to the "client"
          // properties then it's either IE, and thus we don't need to subtract
          // anything, or an element merely doesn't have paddings/borders styles.
          if (Math.round(width + horizPad) !== clientWidth) {
              width -= getBordersSize(styles, 'left', 'right') + horizPad;
          }
          if (Math.round(height + vertPad) !== clientHeight) {
              height -= getBordersSize(styles, 'top', 'bottom') + vertPad;
          }
      }
      // Following steps can't be applied to the document's root element as its
      // client[Width/Height] properties represent viewport area of the window.
      // Besides, it's as well not necessary as the <html> itself neither has
      // rendered scroll bars nor it can be clipped.
      if (!isDocumentElement(target)) {
          // In some browsers (only in Firefox, actually) CSS width & height
          // include scroll bars size which can be removed at this step as scroll
          // bars are the only difference between rounded dimensions + paddings
          // and "client" properties, though that is not always true in Chrome.
          var vertScrollbar = Math.round(width + horizPad) - clientWidth;
          var horizScrollbar = Math.round(height + vertPad) - clientHeight;
          // Chrome has a rather weird rounding of "client" properties.
          // E.g. for an element with content width of 314.2px it sometimes gives
          // the client width of 315px and for the width of 314.7px it may give
          // 314px. And it doesn't happen all the time. So just ignore this delta
          // as a non-relevant.
          if (Math.abs(vertScrollbar) !== 1) {
              width -= vertScrollbar;
          }
          if (Math.abs(horizScrollbar) !== 1) {
              height -= horizScrollbar;
          }
      }
      return createRectInit(paddings.left, paddings.top, width, height);
  }
  /**
   * Checks whether provided element is an instance of the SVGGraphicsElement.
   *
   * @param {Element} target - Element to be checked.
   * @returns {boolean}
   */
  var isSVGGraphicsElement = (function () {
      // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement
      // interface.
      if (typeof SVGGraphicsElement !== 'undefined') {
          return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };
      }
      // If it's so, then check that element is at least an instance of the
      // SVGElement and that it has the "getBBox" method.
      // eslint-disable-next-line no-extra-parens
      return function (target) { return (target instanceof getWindowOf(target).SVGElement &&
          typeof target.getBBox === 'function'); };
  })();
  /**
   * Checks whether provided element is a document element (<html>).
   *
   * @param {Element} target - Element to be checked.
   * @returns {boolean}
   */
  function isDocumentElement(target) {
      return target === getWindowOf(target).document.documentElement;
  }
  /**
   * Calculates an appropriate content rectangle for provided html or svg element.
   *
   * @param {Element} target - Element content rectangle of which needs to be calculated.
   * @returns {DOMRectInit}
   */
  function getContentRect(target) {
      if (!isBrowser) {
          return emptyRect;
      }
      if (isSVGGraphicsElement(target)) {
          return getSVGContentRect(target);
      }
      return getHTMLElementContentRect(target);
  }
  /**
   * Creates rectangle with an interface of the DOMRectReadOnly.
   * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly
   *
   * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.
   * @returns {DOMRectReadOnly}
   */
  function createReadOnlyRect(_a) {
      var x = _a.x, y = _a.y, width = _a.width, height = _a.height;
      // If DOMRectReadOnly is available use it as a prototype for the rectangle.
      var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;
      var rect = Object.create(Constr.prototype);
      // Rectangle's properties are not writable and non-enumerable.
      defineConfigurable(rect, {
          x: x, y: y, width: width, height: height,
          top: y,
          right: x + width,
          bottom: height + y,
          left: x
      });
      return rect;
  }
  /**
   * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.
   * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit
   *
   * @param {number} x - X coordinate.
   * @param {number} y - Y coordinate.
   * @param {number} width - Rectangle's width.
   * @param {number} height - Rectangle's height.
   * @returns {DOMRectInit}
   */
  function createRectInit(x, y, width, height) {
      return { x: x, y: y, width: width, height: height };
  }

  /**
   * Class that is responsible for computations of the content rectangle of
   * provided DOM element and for keeping track of it's changes.
   */
  var ResizeObservation = /** @class */ (function () {
      /**
       * Creates an instance of ResizeObservation.
       *
       * @param {Element} target - Element to be observed.
       */
      function ResizeObservation(target) {
          /**
           * Broadcasted width of content rectangle.
           *
           * @type {number}
           */
          this.broadcastWidth = 0;
          /**
           * Broadcasted height of content rectangle.
           *
           * @type {number}
           */
          this.broadcastHeight = 0;
          /**
           * Reference to the last observed content rectangle.
           *
           * @private {DOMRectInit}
           */
          this.contentRect_ = createRectInit(0, 0, 0, 0);
          this.target = target;
      }
      /**
       * Updates content rectangle and tells whether it's width or height properties
       * have changed since the last broadcast.
       *
       * @returns {boolean}
       */
      ResizeObservation.prototype.isActive = function () {
          var rect = getContentRect(this.target);
          this.contentRect_ = rect;
          return (rect.width !== this.broadcastWidth ||
              rect.height !== this.broadcastHeight);
      };
      /**
       * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data
       * from the corresponding properties of the last observed content rectangle.
       *
       * @returns {DOMRectInit} Last observed content rectangle.
       */
      ResizeObservation.prototype.broadcastRect = function () {
          var rect = this.contentRect_;
          this.broadcastWidth = rect.width;
          this.broadcastHeight = rect.height;
          return rect;
      };
      return ResizeObservation;
  }());

  var ResizeObserverEntry = /** @class */ (function () {
      /**
       * Creates an instance of ResizeObserverEntry.
       *
       * @param {Element} target - Element that is being observed.
       * @param {DOMRectInit} rectInit - Data of the element's content rectangle.
       */
      function ResizeObserverEntry(target, rectInit) {
          var contentRect = createReadOnlyRect(rectInit);
          // According to the specification following properties are not writable
          // and are also not enumerable in the native implementation.
          //
          // Property accessors are not being used as they'd require to define a
          // private WeakMap storage which may cause memory leaks in browsers that
          // don't support this type of collections.
          defineConfigurable(this, { target: target, contentRect: contentRect });
      }
      return ResizeObserverEntry;
  }());

  var ResizeObserverSPI = /** @class */ (function () {
      /**
       * Creates a new instance of ResizeObserver.
       *
       * @param {ResizeObserverCallback} callback - Callback function that is invoked
       *      when one of the observed elements changes it's content dimensions.
       * @param {ResizeObserverController} controller - Controller instance which
       *      is responsible for the updates of observer.
       * @param {ResizeObserver} callbackCtx - Reference to the public
       *      ResizeObserver instance which will be passed to callback function.
       */
      function ResizeObserverSPI(callback, controller, callbackCtx) {
          /**
           * Collection of resize observations that have detected changes in dimensions
           * of elements.
           *
           * @private {Array<ResizeObservation>}
           */
          this.activeObservations_ = [];
          /**
           * Registry of the ResizeObservation instances.
           *
           * @private {Map<Element, ResizeObservation>}
           */
          this.observations_ = new MapShim();
          if (typeof callback !== 'function') {
              throw new TypeError('The callback provided as parameter 1 is not a function.');
          }
          this.callback_ = callback;
          this.controller_ = controller;
          this.callbackCtx_ = callbackCtx;
      }
      /**
       * Starts observing provided element.
       *
       * @param {Element} target - Element to be observed.
       * @returns {void}
       */
      ResizeObserverSPI.prototype.observe = function (target) {
          if (!arguments.length) {
              throw new TypeError('1 argument required, but only 0 present.');
          }
          // Do nothing if current environment doesn't have the Element interface.
          if (typeof Element === 'undefined' || !(Element instanceof Object)) {
              return;
          }
          if (!(target instanceof getWindowOf(target).Element)) {
              throw new TypeError('parameter 1 is not of type "Element".');
          }
          var observations = this.observations_;
          // Do nothing if element is already being observed.
          if (observations.has(target)) {
              return;
          }
          observations.set(target, new ResizeObservation(target));
          this.controller_.addObserver(this);
          // Force the update of observations.
          this.controller_.refresh();
      };
      /**
       * Stops observing provided element.
       *
       * @param {Element} target - Element to stop observing.
       * @returns {void}
       */
      ResizeObserverSPI.prototype.unobserve = function (target) {
          if (!arguments.length) {
              throw new TypeError('1 argument required, but only 0 present.');
          }
          // Do nothing if current environment doesn't have the Element interface.
          if (typeof Element === 'undefined' || !(Element instanceof Object)) {
              return;
          }
          if (!(target instanceof getWindowOf(target).Element)) {
              throw new TypeError('parameter 1 is not of type "Element".');
          }
          var observations = this.observations_;
          // Do nothing if element is not being observed.
          if (!observations.has(target)) {
              return;
          }
          observations.delete(target);
          if (!observations.size) {
              this.controller_.removeObserver(this);
          }
      };
      /**
       * Stops observing all elements.
       *
       * @returns {void}
       */
      ResizeObserverSPI.prototype.disconnect = function () {
          this.clearActive();
          this.observations_.clear();
          this.controller_.removeObserver(this);
      };
      /**
       * Collects observation instances the associated element of which has changed
       * it's content rectangle.
       *
       * @returns {void}
       */
      ResizeObserverSPI.prototype.gatherActive = function () {
          var _this = this;
          this.clearActive();
          this.observations_.forEach(function (observation) {
              if (observation.isActive()) {
                  _this.activeObservations_.push(observation);
              }
          });
      };
      /**
       * Invokes initial callback function with a list of ResizeObserverEntry
       * instances collected from active resize observations.
       *
       * @returns {void}
       */
      ResizeObserverSPI.prototype.broadcastActive = function () {
          // Do nothing if observer doesn't have active observations.
          if (!this.hasActive()) {
              return;
          }
          var ctx = this.callbackCtx_;
          // Create ResizeObserverEntry instance for every active observation.
          var entries = this.activeObservations_.map(function (observation) {
              return new ResizeObserverEntry(observation.target, observation.broadcastRect());
          });
          this.callback_.call(ctx, entries, ctx);
          this.clearActive();
      };
      /**
       * Clears the collection of active observations.
       *
       * @returns {void}
       */
      ResizeObserverSPI.prototype.clearActive = function () {
          this.activeObservations_.splice(0);
      };
      /**
       * Tells whether observer has active observations.
       *
       * @returns {boolean}
       */
      ResizeObserverSPI.prototype.hasActive = function () {
          return this.activeObservations_.length > 0;
      };
      return ResizeObserverSPI;
  }());

  // Registry of internal observers. If WeakMap is not available use current shim
  // for the Map collection as it has all required methods and because WeakMap
  // can't be fully polyfilled anyway.
  var observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();
  /**
   * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation
   * exposing only those methods and properties that are defined in the spec.
   */
  var ResizeObserver = /** @class */ (function () {
      /**
       * Creates a new instance of ResizeObserver.
       *
       * @param {ResizeObserverCallback} callback - Callback that is invoked when
       *      dimensions of the observed elements change.
       */
      function ResizeObserver(callback) {
          if (!(this instanceof ResizeObserver)) {
              throw new TypeError('Cannot call a class as a function.');
          }
          if (!arguments.length) {
              throw new TypeError('1 argument required, but only 0 present.');
          }
          var controller = ResizeObserverController.getInstance();
          var observer = new ResizeObserverSPI(callback, controller, this);
          observers.set(this, observer);
      }
      return ResizeObserver;
  }());
  // Expose public methods of ResizeObserver.
  [
      'observe',
      'unobserve',
      'disconnect'
  ].forEach(function (method) {
      ResizeObserver.prototype[method] = function () {
          var _a;
          return (_a = observers.get(this))[method].apply(_a, arguments);
      };
  });

  var index = (function () {
      // Export existing implementation if available.
      if (typeof global$1.ResizeObserver !== 'undefined') {
          return global$1.ResizeObserver;
      }
      return ResizeObserver;
  })();

  var getButtonPadding = function(height) {
      var res = (height - 30) / 2 + 3;
      if (height < 40) {
          return res;
      }
      return res - 2;
  };
  var getButtonFontSize = function(height) {
      if (height < 40) {
          return 14;
      }
      if (height > 47) {
          return 17;
      }
      return 16;
  };
  var getButtonLogoSize = function(height) {
      if (height < 40) {
          return 24;
      }
      return 28;
  };

  function _define_property$5(obj, key, value) {
      if (key in obj) {
          Object.defineProperty(obj, key, {
              value: value,
              enumerable: true,
              configurable: true,
              writable: true
          });
      } else {
          obj[key] = value;
      }
      return obj;
  }
  var providerLang = "VK ID";
  var _obj$3;
  var longLang = (_obj$3 = {}, _define_property$5(_obj$3, exports.Languages.RUS, "Войти c VK ID"), _define_property$5(_obj$3, exports.Languages.UKR, "Увійти з VK ID"), _define_property$5(_obj$3, exports.Languages.ENG, "Sign in with VK ID"), _define_property$5(_obj$3, exports.Languages.SPA, "Iniciar sesi\xf3n con VK ID"), _define_property$5(_obj$3, exports.Languages.GERMAN, "Mit VK-ID anmelden"), _define_property$5(_obj$3, exports.Languages.POL, "Wejdź z VK ID"), _define_property$5(_obj$3, exports.Languages.FRA, "Se connecter avec VK ID"), _define_property$5(_obj$3, exports.Languages.TURKEY, "VK ID aracılığıyla gir"), _obj$3);
  var _obj1$2;
  var shortLang = (_obj1$2 = {}, _define_property$5(_obj1$2, exports.Languages.RUS, "Продолжить"), _define_property$5(_obj1$2, exports.Languages.UKR, "Продовжити"), _define_property$5(_obj1$2, exports.Languages.ENG, "Continue"), _define_property$5(_obj1$2, exports.Languages.SPA, "Continuar"), _define_property$5(_obj1$2, exports.Languages.GERMAN, "Fortfahren"), _define_property$5(_obj1$2, exports.Languages.POL, "Kontynuuj"), _define_property$5(_obj1$2, exports.Languages.FRA, "Continuer"), _define_property$5(_obj1$2, exports.Languages.TURKEY, "Devam"), _obj1$2);

  var logoSvg = '\n  <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n    <path id="logoBg" fill-rule="evenodd" clip-rule="evenodd" d="M4.2653 4.2653C3 5.5306 3 7.56707 3 11.64V12.36C3 16.4329 3 18.4694 4.2653 19.7347C5.5306 21 7.56706 21 11.64 21H12.36C16.4329 21 18.4694 21 19.7347 19.7347C21 18.4694 21 16.4329 21 12.36V11.64C21 7.56707 21 5.5306 19.7347 4.2653C18.4694 3 16.4329 3 12.36 3H11.64C7.56706 3 5.5306 3 4.2653 4.2653Z" fill="white"/>\n    <path id="logoIcon" d="M12.6095 16C8.55576 16 6.09636 13.1823 6 8.5H8.05309C8.1171 11.9395 9.67903 13.397 10.8764 13.6967V8.5H12.8439V11.4683C13.9988 11.3401 15.2076 9.98991 15.614 8.5H17.5505C17.2406 10.3321 15.9246 11.6823 14.9948 12.2392C15.9253 12.6895 17.4225 13.8682 18 16H15.8714C15.4219 14.5749 14.321 13.4712 12.8446 13.3213V16H12.6095Z" fill="#0077FF"/>\n  </svg>\n';
  var spinnerSvg$1 = '\n  <svg width="28" height="28" viewBox="0 0 28 28" fill="none" xmlns="http://www.w3.org/2000/svg">\n    <path d="M14 22C13.4477 22 13 21.5523 13 21C13 20.4477 13.4477 20 14 20C17.3137 20 20 17.3137 20 14C20 10.6863 17.3137 8 14 8C10.6863 8 8 10.6863 8 14C8 14.6472 8.10214 15.2793 8.3002 15.8802C8.4731 16.4047 8.18807 16.9701 7.66355 17.143C7.13902 17.3159 6.57365 17.0308 6.40074 16.5063C6.13628 15.7041 6 14.8606 6 14C6 9.58172 9.58172 6 14 6C18.4183 6 22 9.58172 22 14C22 18.4183 18.4183 22 14 22Z" fill="currentColor"/>\n  </svg>\n';
  var getOneTapTemplate = function(param) {
      var width = param.width, height = param.height, iframeHeight = param.iframeHeight, borderRadius = param.borderRadius, openFullAuth = param.openFullAuth, skin = param.skin, scheme = param.scheme, _param_lang = param.lang, lang = _param_lang === void 0 ? exports.Languages.RUS : _param_lang, renderOAuthList = param.renderOAuthList, providers = param.providers;
      return function(id) {
          var textIconLimit = 0;
          var textLongLimit = 0;
          var textShortWidth = 0;
          var textLongWidth = 0;
          var initialText = shortLang[lang];
          var shortText = providerLang;
          var longText = longLang[lang];
          var textPadding = 8;
          var padding = getButtonPadding(height);
          var fontSize = getButtonFontSize(height);
          var logoSize = getButtonLogoSize(height);
          var containerEl = document.createElement("div");
          var buttonEl = document.createElement("button");
          setTimeout(function() {
              buttonEl.classList.add("VkIdWebSdk__button_animation_".concat(id));
          }, 100);
          buttonEl.classList.add("VkIdWebSdk__button_".concat(id));
          buttonEl.classList.add("VkIdWebSdk__button_reset_".concat(id));
          openFullAuth && (buttonEl.onclick = openFullAuth);
          var btnInEl = document.createElement("span");
          btnInEl.classList.add("VkIdWebSdk__button_in_".concat(id));
          var contentEl = document.createElement("span");
          contentEl.classList.add("VkIdWebSdk__button_content_".concat(id));
          var logoEl = document.createElement("span");
          logoEl.classList.add("VkIdWebSdk__button_logo_".concat(id));
          logoEl.innerHTML = logoSvg;
          var textContainerEl = document.createElement("span");
          textContainerEl.classList.add("VkIdWebSdk__button_text_".concat(id));
          var textEl = document.createElement("span");
          textEl.innerText = initialText;
          var textLongEl = document.createElement("span");
          textLongEl.innerText = longText;
          var textShortEl = document.createElement("span");
          textShortEl.innerText = shortText;
          var spinnerEl = document.createElement("span");
          spinnerEl.classList.add("VkIdWebSdk__button_spinner_".concat(id));
          spinnerEl.innerHTML = spinnerSvg$1;
          var oauthListEl = document.createElement("div");
          oauthListEl.classList.add("VkIdWebSdk__oauthList_container_".concat(id));
          var getTextWidth = function(clientWidth) {
              return clientWidth + 2 * textPadding + 2 * padding + 2 * logoSize;
          };
          var handleLoaded = function() {
              var ANIMATION_TIMEOUT = 0;
              var observeCallback = function() {
                  var hasTextContainer = contentEl.contains(textContainerEl);
                  var hasShortText = textContainerEl.contains(textShortEl);
                  var hasLongText = textContainerEl.contains(textLongEl);
                  var containerWidth = containerEl.clientWidth;
                  if (hasTextContainer && containerWidth < textIconLimit) {
                      buttonEl.setAttribute("style", "width: ".concat(height, "px;"));
                      textContainerEl.remove();
                      spinnerEl.remove();
                  }
                  if (!hasTextContainer && containerWidth >= textIconLimit) {
                      buttonEl.removeAttribute("style");
                      contentEl.appendChild(textContainerEl);
                      contentEl.appendChild(spinnerEl);
                  }
                  if (!hasShortText && containerWidth < textLongLimit) {
                      textContainerEl.style.width = "".concat(textShortWidth, "px");
                      textLongEl.dataset.active = "";
                      textShortEl.dataset.active = "true";
                      setTimeout(function() {
                          // Дожидаемся анимации и меняем элементы
                          textLongEl.remove();
                          textContainerEl.appendChild(textShortEl);
                      }, ANIMATION_TIMEOUT);
                  }
                  if (!hasLongText && containerWidth >= textLongLimit) {
                      textContainerEl.style.width = "".concat(textLongWidth, "px");
                      textShortEl.dataset.active = "";
                      textLongEl.dataset.active = "true";
                      setTimeout(function() {
                          // Дожидаемся анимации и меняем элементы
                          textShortEl.remove();
                          textContainerEl.appendChild(textLongEl);
                      }, ANIMATION_TIMEOUT);
                  }
              };
              var observer = new index(debounce(observeCallback, 500));
              observer.observe(containerEl);
              var oneTap = document.getElementById(id);
              if (oneTap) {
                  var _providers;
                  oneTap.appendChild(containerEl);
                  containerEl.appendChild(buttonEl);
                  if ((_providers = providers) === null || _providers === void 0 ? void 0 : _providers.length) {
                      containerEl.appendChild(oauthListEl);
                      renderOAuthList({
                          lang: lang,
                          scheme: scheme,
                          container: oauthListEl,
                          oauthList: providers,
                          styles: {
                              borderRadius: borderRadius,
                              height: height
                          }
                      });
                  }
                  buttonEl.appendChild(btnInEl);
                  btnInEl.appendChild(contentEl);
                  contentEl.appendChild(logoEl);
                  contentEl.appendChild(textContainerEl);
                  contentEl.appendChild(spinnerEl);
                  textContainerEl.appendChild(textEl);
                  textContainerEl.appendChild(textLongEl);
                  textContainerEl.appendChild(textShortEl);
                  textShortWidth = textShortEl.clientWidth;
                  textLongWidth = textLongEl.clientWidth;
                  textIconLimit = getTextWidth(textEl.clientWidth);
                  textLongLimit = getTextWidth(textLongWidth);
                  textEl.remove();
                  textLongEl.remove();
                  textShortEl.remove();
                  observeCallback();
                  ANIMATION_TIMEOUT = 250;
              }
          };
          if (document.readyState === "loading") {
              document.addEventListener("DOMContentLoaded", handleLoaded);
          } else {
              setTimeout(handleLoaded, 0);
          }
          return '\n<div id="'.concat(id, '" data-test-id="oneTap" data-scheme="').concat(scheme, '" data-skin="').concat(skin, '">\n  <style>\n    :root #').concat(id, " {\n      --onetap--button_background: #0077FF;\n      --onetap--button_border: none;\n      --onetap--background_hover: #0071F2;\n      --onetap--text_and_spinner: #FFF;\n      --onetap--logo_icon: #0077FF;\n      --onetap--logo_background: #FFF;\n    }\n\n    :root #").concat(id, "[data-scheme=light][data-skin=primary] {\n      --onetap--background_hover: #0071F2;\n      --onetap--background_active: #0069E1;\n    }\n\n    :root #").concat(id, "[data-scheme=dark][data-skin=primary] {\n      --onetap--background_hover: #097EFF;\n      --onetap--background_active: #1385FF;\n    }\n\n    :root #").concat(id, "[data-scheme=light][data-skin=secondary] {\n      --onetap--button_background: rgba(255, 255, 255, 0.12);\n      --onetap--button_border: 1px solid rgba(0, 0, 0, 0.12);\n      --onetap--background_hover: #F5F5F7;\n      --onetap--background_active: #EBECEF;\n      --onetap--text_and_spinner: #000;\n      --onetap--logo_icon: #FFF;\n      --onetap--logo_background: #0077FF;\n    }\n\n    :root #").concat(id, "[data-scheme=dark][data-skin=secondary] {\n      --onetap--button_background: transparent;\n      --onetap--button_border: 1px solid rgba(255, 255, 255, 0.12);\n      --onetap--background_hover: rgba(255, 255, 255, 0.06);\n      --onetap--background_active: rgba(255, 255, 255, 0.1);\n      --onetap--logo_icon: #FFF;\n      --onetap--logo_background: #0077FF;\n    }\n\n    #").concat(id, " {\n      position: relative;\n      width: ").concat(width ? "".concat(width, "px") : "100%", ";\n      min-width: ").concat(height, "px;\n    }\n\n    #").concat(id, "[data-state=loaded] {\n      height: ").concat(iframeHeight, "px;\n    }\n\n    #").concat(id, " iframe {\n      position: absolute;\n      top: 0;\n      left: 0;\n      opacity: 0;\n      pointer-events: none;\n      border: none;\n      color-scheme: auto;\n    }\n\n    #").concat(id, " .VkIdWebSdk__button_reset_").concat(id, " {\n      border: none;\n      margin: 0;\n      padding: 0;\n      width: auto;\n      overflow: visible;\n      background: transparent;\n      color: inherit;\n      font: inherit;\n      line-height: normal;\n      -webkit-font-smoothing: inherit;\n      -moz-osx-font-smoothing: inherit;\n      -webkit-appearance: none;\n    }\n\n    #").concat(id, " .VkIdWebSdk__button_").concat(id, " {\n      padding: ").concat(padding, "px;\n      height: ").concat(height, "px;\n      width: 100%;\n      border-radius: ").concat(borderRadius, "px;\n      box-sizing: border-box;\n      overflow: hidden;\n    }\n\n    #").concat(id, " .VkIdWebSdk__button_animation_").concat(id, " {\n      transition: .2s ease;\n    }\n\n    #").concat(id, " .VkIdWebSdk__button_").concat(id, ":hover {\n      cursor: pointer;\n    }\n\n    #").concat(id, " .VkIdWebSdk__button_").concat(id, " {\n      background: var(--onetap--button_background);\n      border: var(--onetap--button_border);\n    }\n\n    #").concat(id, " .VkIdWebSdk__button_").concat(id, ":focus,\n    #").concat(id, " .VkIdWebSdk__button_").concat(id, ":hover {\n      background: var(--onetap--background_hover);\n    }\n\n    #").concat(id, " .VkIdWebSdk__button_").concat(id, ":active {\n      background: var(--onetap--background_active);\n    }\n\n    #").concat(id, " .VkIdWebSdk__button_in_").concat(id, " {\n      display: inline-block;\n      width: 100%;\n      height: 100%;\n      min-width: max-content;\n      transition: width 0.5s;\n    }\n\n    #").concat(id, " .VkIdWebSdk__button_content_").concat(id, " {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      height: 100%;\n    }\n\n    #").concat(id, " .VkIdWebSdk__button_logo_").concat(id, ",\n    #").concat(id, " .VkIdWebSdk__button_spinner_").concat(id, ",\n    #").concat(id, " .VkIdWebSdk__button_logo_").concat(id, " > svg,\n    #").concat(id, " .VkIdWebSdk__button_spinner_").concat(id, " > svg {\n      width: ").concat(logoSize, "px;\n      height: ").concat(logoSize, "px;\n    }\n\n    #").concat(id, " .VkIdWebSdk__button_spinner_").concat(id, " > svg {\n      position: absolute;\n      right: ").concat(padding, "px;\n      animation: vkIdSdkButtonSpinner 0.7s linear infinite;\n    }\n\n    #").concat(id, " .VkIdWebSdk__button_text_").concat(id, ' {\n      font-family: -apple-system, system-ui, "Helvetica Neue", Roboto, sans-serif;\n      font-weight: 500;\n      font-size: ').concat(fontSize, "px;\n      transition: .2s;\n      white-space: nowrap;\n      text-overflow: ellipsis;\n      overflow: hidden;\n    }\n\n    #").concat(id, " .VkIdWebSdk__button_text_").concat(id, " > span {\n      opacity: 0;\n      display: inline-block;\n      padding: 0 ").concat(textPadding, "px;\n      transition: .5s;\n    }\n\n    #").concat(id, " .VkIdWebSdk__button_text_").concat(id, " > span[data-active=true] {\n      opacity: 1;\n    }\n\n    #").concat(id, " .VkIdWebSdk__button_text_").concat(id, ",\n    #").concat(id, " .VkIdWebSdk__button_spinner_").concat(id, " {\n      color: var(--onetap--text_and_spinner);\n    }\n\n    .VkIdWebSdk__oauthList_container_").concat(id, " {\n      margin-top: 16px;\n    }\n\n    #").concat(id, " #logoBg {\n      fill: var(--onetap--logo_background);\n    }\n\n    #").concat(id, " #logoIcon {\n      fill: var(--onetap--logo_icon);\n    }\n\n    #").concat(id, "[data-state=not_loaded] .VkIdWebSdk__button_in_").concat(id, " {\n      width: 0;\n    }\n\n    #").concat(id, "[data-state=not_loaded] .VkIdWebSdk__button_spinner_").concat(id, " {\n      transition: .2s;\n      opacity: 0;\n      pointer-events: none;\n      width: 0;\n    }\n\n    #").concat(id, "[data-state=loaded] .VkIdWebSdk__oauthList_container_").concat(id, " {\n      display: none;\n    }\n\n    #").concat(id, "[data-state=loaded] iframe {\n      position: initial;\n      opacity: 100;\n      pointer-events: all;\n    }\n\n    #").concat(id, "[data-state=loaded] .VkIdWebSdk__button_").concat(id, ' {\n      display: none;\n    }\n\n    @keyframes vkIdSdkButtonSpinner {\n      0% {\n        transform: rotate(0deg);\n      }\n      100% {\n        transform: rotate(360deg);\n      }\n    }\n  </style>\n  <iframe width="100%" height="100%" />\n</div>\n  ');
      };
  };

  function _assert_this_initialized$1(self) {
      if (self === void 0) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
  }
  function _class_call_check$1(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
      }
  }
  function _defineProperties$1(target, props) {
      for(var i = 0; i < props.length; i++){
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor) descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
      }
  }
  function _create_class$1(Constructor, protoProps, staticProps) {
      if (protoProps) _defineProperties$1(Constructor.prototype, protoProps);
      if (staticProps) _defineProperties$1(Constructor, staticProps);
      return Constructor;
  }
  function _define_property$4(obj, key, value) {
      if (key in obj) {
          Object.defineProperty(obj, key, {
              value: value,
              enumerable: true,
              configurable: true,
              writable: true
          });
      } else {
          obj[key] = value;
      }
      return obj;
  }
  function _get$1(target, property, receiver) {
      if (typeof Reflect !== "undefined" && Reflect.get) {
          _get$1 = Reflect.get;
      } else {
          _get$1 = function get(target, property, receiver) {
              var base = _super_prop_base$1(target, property);
              if (!base) return;
              var desc = Object.getOwnPropertyDescriptor(base, property);
              if (desc.get) {
                  return desc.get.call(receiver || target);
              }
              return desc.value;
          };
      }
      return _get$1(target, property, receiver || target);
  }
  function _get_prototype_of$1(o) {
      _get_prototype_of$1 = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o) {
          return o.__proto__ || Object.getPrototypeOf(o);
      };
      return _get_prototype_of$1(o);
  }
  function _inherits$1(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
              value: subClass,
              writable: true,
              configurable: true
          }
      });
      if (superClass) _set_prototype_of$1(subClass, superClass);
  }
  function _object_spread$1(target) {
      for(var i = 1; i < arguments.length; i++){
          var source = arguments[i] != null ? arguments[i] : {};
          var ownKeys = Object.keys(source);
          if (typeof Object.getOwnPropertySymbols === "function") {
              ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                  return Object.getOwnPropertyDescriptor(source, sym).enumerable;
              }));
          }
          ownKeys.forEach(function(key) {
              _define_property$4(target, key, source[key]);
          });
      }
      return target;
  }
  function ownKeys$1(object, enumerableOnly) {
      var keys = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
          var symbols = Object.getOwnPropertySymbols(object);
          if (enumerableOnly) {
              symbols = symbols.filter(function(sym) {
                  return Object.getOwnPropertyDescriptor(object, sym).enumerable;
              });
          }
          keys.push.apply(keys, symbols);
      }
      return keys;
  }
  function _object_spread_props$1(target, source) {
      source = source != null ? source : {};
      if (Object.getOwnPropertyDescriptors) {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
      } else {
          ownKeys$1(Object(source)).forEach(function(key) {
              Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
          });
      }
      return target;
  }
  function _possible_constructor_return$1(self, call) {
      if (call && (_type_of$1(call) === "object" || typeof call === "function")) {
          return call;
      }
      return _assert_this_initialized$1(self);
  }
  function _set_prototype_of$1(o, p) {
      _set_prototype_of$1 = Object.setPrototypeOf || function setPrototypeOf(o, p) {
          o.__proto__ = p;
          return o;
      };
      return _set_prototype_of$1(o, p);
  }
  function _super_prop_base$1(object, property) {
      while(!Object.prototype.hasOwnProperty.call(object, property)){
          object = _get_prototype_of$1(object);
          if (object === null) break;
      }
      return object;
  }
  function _type_of$1(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
  }
  function _is_native_reflect_construct$1() {
      if (typeof Reflect === "undefined" || !Reflect.construct) return false;
      if (Reflect.construct.sham) return false;
      if (typeof Proxy === "function") return true;
      try {
          Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
          return true;
      } catch (e) {
          return false;
      }
  }
  function _create_super$1(Derived) {
      var hasNativeReflectConstruct = _is_native_reflect_construct$1();
      return function _createSuperInternal() {
          var Super = _get_prototype_of$1(Derived), result;
          if (hasNativeReflectConstruct) {
              var NewTarget = _get_prototype_of$1(this).constructor;
              result = Reflect.construct(Super, arguments, NewTarget);
          } else {
              result = Super.apply(this, arguments);
          }
          return _possible_constructor_return$1(this, result);
      };
  }
  function _ts_decorate$1(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
      else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
      return c > 3 && r && Object.defineProperty(target, key, r), r;
  }
  var defaultStylesParams = {
      width: 0,
      height: 44,
      borderRadius: 8
  };
  var BUTTON_SPACING = 12;
  var OneTap = /*#__PURE__*/ function(Widget) {
      _inherits$1(OneTap, Widget);
      var _super = _create_super$1(OneTap);
      function OneTap() {
          _class_call_check$1(this, OneTap);
          var _this;
          _this = _super.apply(this, arguments);
          _define_property$4(_assert_this_initialized$1(_this), "vkidAppName", "button_one_tap_auth");
          return _this;
      }
      _create_class$1(OneTap, [
          {
              key: "onBridgeMessageHandler",
              value: function onBridgeMessageHandler(event) {
                  switch(event.handler){
                      // TODO: hidePreloadButton на событие ошибки
                      case OneTapInternalEvents.LOGIN_SUCCESS:
                          {
                              this.redirectWithPayload(event.params);
                              break;
                          }
                      case OneTapInternalEvents.SHOW_FULL_AUTH:
                          {
                              var params = {};
                              if (event.params.screen) {
                                  params.screen = event.params.screen;
                              }
                              if (event.params.sdk_oauth) {
                                  params.action = {
                                      name: "sdk_oauth",
                                      params: {
                                          oauth: event.params.sdk_oauth
                                      }
                                  };
                              }
                              this.openFullAuth(params);
                              break;
                          }
                      case OneTapInternalEvents.NOT_AUTHORIZED:
                          {
                              var _this_elements_iframe, _this_elements;
                              this.setState(WidgetState.NOT_LOADED);
                              clearTimeout(this.timeoutTimer);
                              (_this_elements = this.elements) === null || _this_elements === void 0 ? void 0 : (_this_elements_iframe = _this_elements.iframe) === null || _this_elements_iframe === void 0 ? void 0 : _this_elements_iframe.remove();
                              break;
                          }
                      case OneTapInternalEvents.SHOW_AGREEMENTS_DIALOG:
                          {
                              this.createAgreementsDialogWidget();
                              break;
                          }
                      default:
                          {
                              _get$1(_get_prototype_of$1(OneTap.prototype), "onBridgeMessageHandler", this).call(this, event);
                              break;
                          }
                  }
              }
          },
          {
              key: "createAgreementsDialogWidget",
              value: function createAgreementsDialogWidget() {
                  var _this = this;
                  var params = {
                      container: document.body,
                      lang: this.lang,
                      scheme: this.scheme
                  };
                  var agreementsDialog = new AgreementsDialog();
                  var acceptHandler = function(event) {
                      _this.bridge.sendMessage({
                          handler: OneTapInternalEvents.START_AUTHORIZE,
                          params: event.params
                      });
                      agreementsDialog.off(AgreementsDialogPublicEvents.ACCEPT, acceptHandler);
                      agreementsDialog.close();
                  };
                  agreementsDialog.on(AgreementsDialogPublicEvents.ACCEPT, acceptHandler);
                  agreementsDialog.render(params);
              }
          },
          {
              key: "openFullAuth",
              value: function openFullAuth(value) {
                  var params = _object_spread_props$1(_object_spread$1({}, value), {
                      lang: this.lang,
                      scheme: this.scheme
                  });
                  OneTap.__auth.login(params);
              }
          },
          {
              key: "renderOAuthList",
              value: function renderOAuthList(params) {
                  if (!params.oauthList.length) {
                      return;
                  }
                  var oauthList = new OAuthList();
                  oauthList.render(params);
              }
          },
          {
              key: "render",
              value: function render(params) {
                  var _params, _params1, _params_styles, _params_styles1, _params2, _params_styles2;
                  this.lang = ((_params = params) === null || _params === void 0 ? void 0 : _params.lang) || exports.Languages.RUS;
                  this.scheme = ((_params1 = params) === null || _params1 === void 0 ? void 0 : _params1.scheme) || exports.Scheme.LIGHT;
                  var providers = (params.oauthList || []).filter(function(provider) {
                      return provider !== exports.OAuthName.VK;
                  });
                  var oneTapParams = {
                      style_height: ((_params_styles = params.styles) === null || _params_styles === void 0 ? void 0 : _params_styles.height) || defaultStylesParams.height,
                      style_border_radius: ((_params_styles1 = params.styles) === null || _params_styles1 === void 0 ? void 0 : _params_styles1.borderRadius) || defaultStylesParams.borderRadius,
                      show_alternative_login: ((_params2 = params) === null || _params2 === void 0 ? void 0 : _params2.showAlternativeLogin) ? 1 : 0,
                      button_skin: params.skin || "primary",
                      scheme: this.scheme,
                      lang_id: this.lang,
                      providers: providers.join(",")
                  };
                  this.templateRenderer = getOneTapTemplate({
                      width: ((_params_styles2 = params.styles) === null || _params_styles2 === void 0 ? void 0 : _params_styles2.width) || defaultStylesParams.width,
                      iframeHeight: oneTapParams.show_alternative_login ? oneTapParams.style_height * 2 + BUTTON_SPACING : oneTapParams.style_height,
                      height: oneTapParams.style_height,
                      borderRadius: oneTapParams.style_border_radius,
                      openFullAuth: this.openFullAuth.bind(this),
                      skin: oneTapParams.button_skin,
                      scheme: oneTapParams.scheme,
                      lang: oneTapParams.lang_id,
                      renderOAuthList: this.renderOAuthList.bind(this),
                      providers: providers
                  });
                  return _get$1(_get_prototype_of$1(OneTap.prototype), "render", this).call(this, _object_spread$1({
                      container: params.container
                  }, oneTapParams));
              }
          }
      ]);
      return OneTap;
  }(Widget);
  _ts_decorate$1([
      validator({
          styles: [
              isValidHeight
          ]
      })
  ], OneTap.prototype, "render", null);

  exports.OneTapSkin = void 0;
  (function(OneTapSkin) {
      OneTapSkin["Primary"] = "primary";
      OneTapSkin["Secondary"] = "secondary";
  })(exports.OneTapSkin || (exports.OneTapSkin = {}));

  var FloatingOneTapInternalEvents;
  (function(FloatingOneTapInternalEvents) {
      FloatingOneTapInternalEvents["LOGIN_SUCCESS"] = "floatingonetap: success login";
      FloatingOneTapInternalEvents["SHOW_FULL_AUTH"] = "floatingonetap: show full auth";
      FloatingOneTapInternalEvents["SHOW_AGREEMENTS_DIALOG"] = "floatingonetap: show agreements dialog";
      FloatingOneTapInternalEvents["START_AUTHORIZE"] = "floatingonetap: start authorize";
      FloatingOneTapInternalEvents["NOT_AUTHORIZED"] = "floatingonetap: not authorized";
  })(FloatingOneTapInternalEvents || (FloatingOneTapInternalEvents = {}));

  exports.FloatingOneTapContentId = void 0;
  (function(FloatingOneTapContentId) {
      FloatingOneTapContentId[FloatingOneTapContentId[/**
     * Войти или зарегистрироваться
     */ "SIGN_IN_TO_SERVICE"] = 0] = "SIGN_IN_TO_SERVICE";
      FloatingOneTapContentId[FloatingOneTapContentId[/**
     * Войти в учетную запись сервиса
     */ "SIGN_IN_TO_ACCOUNT"] = 1] = "SIGN_IN_TO_ACCOUNT";
      FloatingOneTapContentId[FloatingOneTapContentId[/**
     * Регистрация на мероприятие
     */ "REGISTRATION_FOR_EVENT"] = 2] = "REGISTRATION_FOR_EVENT";
      FloatingOneTapContentId[FloatingOneTapContentId[/**
     * Подача заявки
     */ "SUBMIT_APPLICATIONS"] = 3] = "SUBMIT_APPLICATIONS";
      FloatingOneTapContentId[FloatingOneTapContentId[/**
     * Оформление заказа в сервисе
     */ "MAKE_ORDER_WITH_SERVICE"] = 4] = "MAKE_ORDER_WITH_SERVICE";
      FloatingOneTapContentId[FloatingOneTapContentId[/**
     * Оформление заказа
     */ "MAKE_ORDER_WITHOUT_SERVICE"] = 5] = "MAKE_ORDER_WITHOUT_SERVICE";
  })(exports.FloatingOneTapContentId || (exports.FloatingOneTapContentId = {}));

  function _define_property$3(obj, key, value) {
      if (key in obj) {
          Object.defineProperty(obj, key, {
              value: value,
              enumerable: true,
              configurable: true,
              writable: true
          });
      } else {
          obj[key] = value;
      }
      return obj;
  }
  var _obj$2;
  var SIGN_IN = (_obj$2 = {}, _define_property$3(_obj$2, exports.Languages.RUS, "Войти c VK ID"), _define_property$3(_obj$2, exports.Languages.UKR, "Увійти з VK ID"), _define_property$3(_obj$2, exports.Languages.ENG, "Sign in with VK ID"), _define_property$3(_obj$2, exports.Languages.SPA, "Iniciar sesi\xf3n con VK ID"), _define_property$3(_obj$2, exports.Languages.GERMAN, "Mit VK-ID anmelden"), _define_property$3(_obj$2, exports.Languages.POL, "Wejdź z VK ID"), _define_property$3(_obj$2, exports.Languages.FRA, "Se connecter avec VK ID"), _define_property$3(_obj$2, exports.Languages.TURKEY, "VK ID aracılığıyla gir"), _obj$2);
  var _obj1$1;
  var MAKE_ORDER = (_obj1$1 = {}, _define_property$3(_obj1$1, exports.Languages.RUS, "Оформить с VK ID"), _define_property$3(_obj1$1, exports.Languages.UKR, "Оформити з VK ID"), _define_property$3(_obj1$1, exports.Languages.ENG, "Order with VK ID"), _define_property$3(_obj1$1, exports.Languages.SPA, "Pedir con VK ID"), _define_property$3(_obj1$1, exports.Languages.GERMAN, "Mit VK-ID bestellen"), _define_property$3(_obj1$1, exports.Languages.POL, "Wypełnij z VK ID"), _define_property$3(_obj1$1, exports.Languages.FRA, "Commander avec VK ID"), _define_property$3(_obj1$1, exports.Languages.TURKEY, "VK ID aracılığıyla oluştur"), _obj1$1);
  var getButtonLang = function(contentId, lang) {
      switch(contentId){
          case exports.FloatingOneTapContentId.SIGN_IN_TO_SERVICE:
          case exports.FloatingOneTapContentId.SIGN_IN_TO_ACCOUNT:
          case exports.FloatingOneTapContentId.REGISTRATION_FOR_EVENT:
          case exports.FloatingOneTapContentId.SUBMIT_APPLICATIONS:
              return SIGN_IN[lang] || SIGN_IN[exports.Languages.RUS];
          case exports.FloatingOneTapContentId.MAKE_ORDER_WITH_SERVICE:
          case exports.FloatingOneTapContentId.MAKE_ORDER_WITHOUT_SERVICE:
              return MAKE_ORDER[lang] || MAKE_ORDER[exports.Languages.RUS];
          default:
              return SIGN_IN[exports.Languages.RUS];
      }
  };

  function _define_property$2(obj, key, value) {
      if (key in obj) {
          Object.defineProperty(obj, key, {
              value: value,
              enumerable: true,
              configurable: true,
              writable: true
          });
      } else {
          obj[key] = value;
      }
      return obj;
  }
  var _obj$1;
  var SIGN_IN_TO_SERVICE = (_obj$1 = {}, _define_property$2(_obj$1, exports.Languages.RUS, "Войдите в\xa0сервис или\xa0зарегистрируйтесь"), _define_property$2(_obj$1, exports.Languages.UKR, "Увійдіть у\xa0сервіс або\xa0зареєструйтеся"), _define_property$2(_obj$1, exports.Languages.ENG, "Sign in to\xa0service or\xa0sign up"), _define_property$2(_obj$1, exports.Languages.SPA, "Acceder al\xa0servicio o\xa0registrarse"), _define_property$2(_obj$1, exports.Languages.GERMAN, "Melden Sie sich beim\xa0Dienst\xa0an oder registrieren Sie\xa0sich"), _define_property$2(_obj$1, exports.Languages.POL, "Wejdź do\xa0serwisu lub\xa0zarejestruj się"), _define_property$2(_obj$1, exports.Languages.FRA, "Connectez-vous au\xa0service ou\xa0inscrivez-vous"), _define_property$2(_obj$1, exports.Languages.TURKEY, "Hizmete\xa0girin yada\xa0oturum oluşturun"), _obj$1);
  var _obj1;
  var SIGN_IN_TO_ACCOUNT = (_obj1 = {}, _define_property$2(_obj1, exports.Languages.RUS, "Войдите в учётную запись {service}"), _define_property$2(_obj1, exports.Languages.UKR, "Увійдіть в обліковий запис {service}"), _define_property$2(_obj1, exports.Languages.ENG, "Sign in to\xa0{service} account"), _define_property$2(_obj1, exports.Languages.SPA, "Acceder a la cuenta\xa0{service}"), _define_property$2(_obj1, exports.Languages.GERMAN, "Melden Sie sich bei Ihrem\xa0{service}-Konto an"), _define_property$2(_obj1, exports.Languages.POL, "Wejdź na rachunek {service}"), _define_property$2(_obj1, exports.Languages.FRA, "Connectez-vous \xe0\xa0{service}"), _define_property$2(_obj1, exports.Languages.TURKEY, "{service} hesabına girin"), _obj1);
  var _obj2;
  var REGISTRATION_FOR_EVENT = (_obj2 = {}, _define_property$2(_obj2, exports.Languages.RUS, "Зарегистрируйтесь на\xa0мероприятие"), _define_property$2(_obj2, exports.Languages.UKR, "Зареєструйтеся на\xa0захід"), _define_property$2(_obj2, exports.Languages.ENG, "Sign up for\xa0event"), _define_property$2(_obj2, exports.Languages.SPA, "Registrarse en\xa0el\xa0evento"), _define_property$2(_obj2, exports.Languages.GERMAN, "Melden\xa0Sie\xa0sich f\xfcr\xa0die\xa0Veranstaltung\xa0an"), _define_property$2(_obj2, exports.Languages.POL, "Zarejestruj się na\xa0wydarzenie"), _define_property$2(_obj2, exports.Languages.FRA, "Inscrivez-vous \xe0\xa0l'\xe9v\xe9nement"), _define_property$2(_obj2, exports.Languages.TURKEY, "Eylemde\xa0kaydolun"), _obj2);
  var _obj3;
  var SUBMIT_APPLICATIONS = (_obj3 = {}, _define_property$2(_obj3, exports.Languages.RUS, "Подайте заявку с\xa0VK\xa0ID"), _define_property$2(_obj3, exports.Languages.UKR, "Подайте запит з\xa0VK\xa0ID"), _define_property$2(_obj3, exports.Languages.ENG, "Apply with\xa0VK\xa0ID"), _define_property$2(_obj3, exports.Languages.SPA, "Solicitar con\xa0VK\xa0ID"), _define_property$2(_obj3, exports.Languages.GERMAN, "Bewerben Sie mit\xa0VK-ID"), _define_property$2(_obj3, exports.Languages.POL, "Zł\xf3ż wniosek z\xa0VK\xa0ID"), _define_property$2(_obj3, exports.Languages.FRA, "Envoyez une\xa0demande avec\xa0VK\xa0ID"), _define_property$2(_obj3, exports.Languages.TURKEY, "VK\xa0ID\xa0yardımıyla başvuru g\xf6nderin"), _obj3);
  var _obj4;
  var MAKE_ORDER_WITH_SERVICE = (_obj4 = {}, _define_property$2(_obj4, exports.Languages.RUS, "Оформите заказ в\xa0{service} с\xa0VK\xa0ID"), _define_property$2(_obj4, exports.Languages.UKR, "Оформіть замовлення в\xa0{service} з\xa0VK\xa0ID"), _define_property$2(_obj4, exports.Languages.ENG, "Place order on\xa0{service} with\xa0VK\xa0ID"), _define_property$2(_obj4, exports.Languages.SPA, "Realizar pedido en\xa0{service} con\xa0VK\xa0ID"), _define_property$2(_obj4, exports.Languages.GERMAN, "Machen Sie eine\xa0Bestellung auf\xa0{service} mit\xa0VK-ID"), _define_property$2(_obj4, exports.Languages.POL, "Wypełnij zam\xf3wienie w\xa0{service} z\xa0VK\xa0ID"), _define_property$2(_obj4, exports.Languages.FRA, "Passez la\xa0commande sur\xa0{service} avec\xa0VK\xa0ID"), _define_property$2(_obj4, exports.Languages.TURKEY, "VK\xa0ID\xa0aracılığıyla {service} te sipariş oluşturun"), _obj4);
  var _obj5;
  var MAKE_ORDER_WITHOUT_SERVICE = (_obj5 = {}, _define_property$2(_obj5, exports.Languages.RUS, "Оформите заказ с\xa0VK\xa0ID"), _define_property$2(_obj5, exports.Languages.UKR, "Оформіть замовлення з\xa0VK\xa0ID"), _define_property$2(_obj5, exports.Languages.ENG, "Place order with\xa0VK\xa0ID"), _define_property$2(_obj5, exports.Languages.SPA, "Realizar pedido con\xa0VK\xa0ID"), _define_property$2(_obj5, exports.Languages.GERMAN, "Machen Sie eine\xa0Bestellung mit\xa0VK-ID"), _define_property$2(_obj5, exports.Languages.POL, "Wypełnij zam\xf3wienie z\xa0VK\xa0ID"), _define_property$2(_obj5, exports.Languages.FRA, "Passez la\xa0commande avec\xa0VK\xa0ID"), _define_property$2(_obj5, exports.Languages.TURKEY, "VK\xa0ID\xa0aracılığıyla sipariş oluşturun"), _obj5);
  var getTitleLang = function(contentId, lang, appName) {
      var result = SIGN_IN_TO_SERVICE[exports.Languages.RUS];
      switch(contentId){
          case exports.FloatingOneTapContentId.SIGN_IN_TO_SERVICE:
              result = SIGN_IN_TO_SERVICE[lang];
              break;
          case exports.FloatingOneTapContentId.SIGN_IN_TO_ACCOUNT:
              result = SIGN_IN_TO_ACCOUNT[lang];
              break;
          case exports.FloatingOneTapContentId.REGISTRATION_FOR_EVENT:
              result = REGISTRATION_FOR_EVENT[lang];
              break;
          case exports.FloatingOneTapContentId.SUBMIT_APPLICATIONS:
              result = SUBMIT_APPLICATIONS[lang];
              break;
          case exports.FloatingOneTapContentId.MAKE_ORDER_WITH_SERVICE:
              result = MAKE_ORDER_WITH_SERVICE[lang];
              break;
          case exports.FloatingOneTapContentId.MAKE_ORDER_WITHOUT_SERVICE:
              result = MAKE_ORDER_WITHOUT_SERVICE[lang];
              break;
      }
      return result.replace("{service}", appName);
  };

  function _define_property$1(obj, key, value) {
      if (key in obj) {
          Object.defineProperty(obj, key, {
              value: value,
              enumerable: true,
              configurable: true,
              writable: true
          });
      } else {
          obj[key] = value;
      }
      return obj;
  }
  var _obj;
  var DESCRIPTION = (_obj = {}, _define_property$1(_obj, exports.Languages.RUS, "После этого вам станут доступны все возможности сервиса. Ваши данные будут надёжно защищены."), _define_property$1(_obj, exports.Languages.UKR, "Після цього вам стануть доступні всі можливості сервісу. Ваші дані будуть надійно захищені."), _define_property$1(_obj, exports.Languages.ENG, "Afterwards, you'll have access to\xa0all of\xa0the\xa0service's features. Your personal data will be carefully protected."), _define_property$1(_obj, exports.Languages.SPA, "Despu\xe9s, tendr\xe1s acceso a\xa0todas las funciones del\xa0servicio. Tus datos personales estar\xe1n cuidadosamente protegidos."), _define_property$1(_obj, exports.Languages.GERMAN, "Anschlie\xdfend stehen Ihnen alle Funktionen des Dienstes zur Verf\xfcgung. Ihre\xa0pers\xf6nlichen Daten werden sorgf\xe4ltig gesch\xfctzt."), _define_property$1(_obj, exports.Languages.POL, "Po tym wszystkie funkcje serwisu będą dostępne. Twoje dane będą dobrze chronione."), _define_property$1(_obj, exports.Languages.FRA, "Cela vous permettra d'avoir acc\xe8s \xe0\xa0toutes les\xa0fonctionnalit\xe9s du service. Vos donn\xe9es personnelles seront soigneusement prot\xe9g\xe9es."), _define_property$1(_obj, exports.Languages.TURKEY, "Bundan sonra hizmetin t\xfcm \xf6zellikleri kullanımınıza sunulacaktır. Verileriniz g\xfcvenilir bir şekilde korunacaktır."), _obj);
  var getDescriptionLang = function(lang) {
      return DESCRIPTION[lang] || DESCRIPTION[exports.Languages.RUS];
  };

  var logoVkIdSvg = '\n  <svg width="33" height="16" viewBox="0 0 33 16" fill="none" xmlns="http://www.w3.org/2000/svg">\n    <path d="M20 13H21.6479V3.5H20V13Z" fill="var(--floating--color_text_primary)"/>\n    <path d="M23.7801 13H27.474C30.4127 13 32.5 11.0326 32.5 8.24326C32.5 5.46738 30.4127 3.5 27.474 3.5H23.7801V13ZM25.4279 11.5177V4.98227H27.474C29.4377 4.98227 30.7835 6.31631 30.7835 8.24326C30.7835 10.1837 29.4377 11.5177 27.474 11.5177H25.4279Z" fill="var(--floating--color_text_primary)"/>\n    <path d="M0 7.68C0 4.05961 0 2.24942 1.12471 1.12471C2.24942 0 4.05961 0 7.68 0H8.32C11.9404 0 13.7506 0 14.8753 1.12471C16 2.24942 16 4.05961 16 7.68V8.32C16 11.9404 16 13.7506 14.8753 14.8753C13.7506 16 11.9404 16 8.32 16H7.68C4.05961 16 2.24942 16 1.12471 14.8753C0 13.7506 0 11.9404 0 8.32V7.68Z" fill="#0077FF"/>\n    <path d="M8.56331 11.66C4.91665 11.66 2.83667 9.16 2.75 5H4.57666C4.63666 8.05333 5.9833 9.34333 7.04997 9.61V5H8.77002V7.63C9.82335 7.51667 10.9299 6.32 11.3032 5H13.0233C12.7366 6.62667 11.5366 7.82667 10.6833 8.32C11.5366 8.72 12.9033 9.76667 13.4233 11.66H11.5299C11.1233 10.3933 10.11 9.41333 8.77002 9.28V11.66H8.56331Z" fill="white"/>\n  </svg>\n';
  var logoVkSvg = '\n  <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n    <path fill-rule="evenodd" clip-rule="evenodd" d="M4.2653 4.2653C3 5.5306 3 7.56707 3 11.64V12.36C3 16.4329 3 18.4694 4.2653 19.7347C5.5306 21 7.56706 21 11.64 21H12.36C16.4329 21 18.4694 21 19.7347 19.7347C21 18.4694 21 16.4329 21 12.36V11.64C21 7.56707 21 5.5306 19.7347 4.2653C18.4694 3 16.4329 3 12.36 3H11.64C7.56706 3 5.5306 3 4.2653 4.2653Z" fill="white"/>\n    <path d="M12.6095 16C8.55576 16 6.09636 13.1823 6 8.5H8.05309C8.1171 11.9395 9.67903 13.397 10.8764 13.6967V8.5H12.8439V11.4683C13.9988 11.3401 15.2076 9.98991 15.614 8.5H17.5505C17.2406 10.3321 15.9246 11.6823 14.9948 12.2392C15.9253 12.6895 17.4225 13.8682 18 16H15.8714C15.4219 14.5749 14.321 13.4712 12.8446 13.3213V16H12.6095Z" fill="#0077FF"/>\n  </svg>\n';
  var closeSvg = '\n  <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">\n    <path fill-rule="evenodd" clip-rule="evenodd" d="M4.71967 4.71969C5.01256 4.42679 5.48744 4.42679 5.78033 4.71969L10 8.93935L14.2197 4.71969C14.5126 4.42679 14.9874 4.42679 15.2803 4.71969C15.5732 5.01258 15.5732 5.48745 15.2803 5.78035L11.0607 10L15.2803 14.2197C15.5732 14.5126 15.5732 14.9875 15.2803 15.2803C14.9874 15.5732 14.5126 15.5732 14.2197 15.2803L10 11.0607L5.78033 15.2803C5.48744 15.5732 5.01256 15.5732 4.71967 15.2803C4.42678 14.9875 4.42678 14.5126 4.71967 14.2197L8.93934 10L4.71967 5.78035C4.42678 5.48745 4.42678 5.01258 4.71967 4.71969Z" fill="currentColor"/>\n  </svg>\n';
  var spinnerSvg = '\n  <svg width="28" height="28" viewBox="0 0 28 28" fill="none" xmlns="http://www.w3.org/2000/svg">\n    <path d="M14 22C13.4477 22 13 21.5523 13 21C13 20.4477 13.4477 20 14 20C17.3137 20 20 17.3137 20 14C20 10.6863 17.3137 8 14 8C10.6863 8 8 10.6863 8 14C8 14.6472 8.10214 15.2793 8.3002 15.8802C8.4731 16.4047 8.18807 16.9701 7.66355 17.143C7.13902 17.3159 6.57365 17.0308 6.40074 16.5063C6.13628 15.7041 6 14.8606 6 14C6 9.58172 9.58172 6 14 6C18.4183 6 22 9.58172 22 14C22 18.4183 18.4183 22 14 22Z" fill="currentColor"/>\n  </svg>\n';
  var INTERNAL_INDENT = 12;
  var getIndent = function(value) {
      if (!value || value <= INTERNAL_INDENT) {
          return 0;
      }
      return value - INTERNAL_INDENT;
  };
  var getFloatingOneTapTemplate = function(param) {
      var scheme = param.scheme, indent = param.indent, openFullAuth = param.openFullAuth, close = param.close, lang = param.lang, contentId = param.contentId, appName = param.appName, providers = param.providers, renderOAuthList = param.renderOAuthList;
      return function(id) {
          var titleText = getTitleLang(contentId, lang, appName);
          var descriptionText = getDescriptionLang(lang);
          var buttonText = getButtonLang(contentId, lang);
          var floatingEl = document.createElement("div");
          floatingEl.classList.add("VkIdWebSdk__floating_".concat(id));
          var containerEl = document.createElement("div");
          containerEl.classList.add("VkIdWebSdk__floating_container_".concat(id));
          var headerEl = document.createElement("div");
          headerEl.classList.add("VkIdWebSdk__floating_header_".concat(id));
          headerEl.innerHTML = logoVkIdSvg;
          var headerAppNameEl = document.createElement("span");
          headerAppNameEl.classList.add("VkIdWebSdk__floating_appName_".concat(id));
          headerAppNameEl.innerText = "\xa0\xb7\xa0".concat(appName);
          var headerCloseEl = document.createElement("div");
          headerCloseEl.classList.add("VkIdWebSdk__floating_close_".concat(id));
          var headerCloseButtonEl = document.createElement("button");
          headerCloseButtonEl.classList.add("VkIdWebSdk__floating_button_reset_".concat(id));
          headerCloseButtonEl.classList.add("VkIdWebSdk__floating_close_btn_".concat(id));
          headerCloseButtonEl.innerHTML = closeSvg;
          close && (headerCloseButtonEl.onclick = close);
          var contentEl = document.createElement("div");
          contentEl.classList.add("VkIdWebSdk__floating_content_".concat(id));
          var titleEl = document.createElement("div");
          titleEl.classList.add("VkIdWebSdk__floating_title_".concat(id));
          titleEl.innerText = titleText;
          var descriptionEl = document.createElement("div");
          descriptionEl.classList.add("VkIdWebSdk__floating_description_".concat(id));
          descriptionEl.innerText = descriptionText;
          var actionEl = document.createElement("div");
          var buttonEl = document.createElement("button");
          buttonEl.classList.add("VkIdWebSdk__floating_button_reset_".concat(id));
          buttonEl.classList.add("VkIdWebSdk__floating_button_".concat(id));
          openFullAuth && (buttonEl.onclick = openFullAuth);
          var buttonContentEl = document.createElement("div");
          buttonContentEl.classList.add("VkIdWebSdk__floating_button_content_".concat(id));
          var buttonLogoEl = document.createElement("span");
          buttonLogoEl.classList.add("VkIdWebSdk__floating_button_logo_".concat(id));
          buttonLogoEl.innerHTML = logoVkSvg;
          var buttonTextEl = document.createElement("span");
          buttonTextEl.classList.add("VkIdWebSdk__floating_button_text_".concat(id));
          buttonTextEl.innerText = buttonText;
          var buttonSpinnerEl = document.createElement("span");
          buttonSpinnerEl.classList.add("VkIdWebSdk__floating_button_spinner_".concat(id));
          buttonSpinnerEl.innerHTML = spinnerSvg;
          var oauthListEl = document.createElement("div");
          oauthListEl.classList.add("VkIdWebSdk__oauthList_container_".concat(id));
          var handleLoaded = function() {
              var floatingOneTap = document.getElementById(id);
              if (floatingOneTap) {
                  var _providers;
                  floatingOneTap.appendChild(floatingEl);
                  floatingEl.appendChild(containerEl);
                  containerEl.appendChild(headerEl);
                  containerEl.appendChild(contentEl);
                  containerEl.appendChild(actionEl);
                  headerEl.appendChild(headerCloseEl);
                  headerEl.appendChild(headerAppNameEl);
                  headerCloseEl.appendChild(headerCloseButtonEl);
                  contentEl.appendChild(titleEl);
                  contentEl.appendChild(descriptionEl);
                  actionEl.appendChild(buttonEl);
                  buttonEl.appendChild(buttonContentEl);
                  buttonContentEl.appendChild(buttonLogoEl);
                  buttonContentEl.appendChild(buttonTextEl);
                  buttonContentEl.appendChild(buttonSpinnerEl);
                  if ((_providers = providers) === null || _providers === void 0 ? void 0 : _providers.length) {
                      containerEl.appendChild(oauthListEl);
                      renderOAuthList({
                          lang: lang,
                          scheme: scheme,
                          container: oauthListEl,
                          oauthList: providers,
                          styles: {
                              borderRadius: 8,
                              height: 36
                          }
                      });
                  }
              }
          };
          if (document.readyState === "loading") {
              document.addEventListener("DOMContentLoaded", handleLoaded);
          } else {
              setTimeout(handleLoaded, 0);
          }
          return '\n<div id="'.concat(id, '" data-test-id="floatingOneTap" data-scheme="').concat(scheme, '">\n  <style>\n    :root #').concat(id, ' {\n      --floating--contaner_padding: 16px;\n      --floating--container_box_shadow: 0px 0px 2px rgba(0,0,0,.08),0px 4px 16px rgba(0,0,0,.08);\n      --floating--font_family: -apple-system,system-ui,"Helvetica Neue",Roboto,sans-serif;\n      --floating--close_button_color_transparent--hover: rgba(0,16,61,.04);\n      --floating--close_button_color_transparent--active: rgba(0,16,61,.08);\n      --floating--button_text_color: #FFFFFF;\n      --floating--button_background_color: #0077ff;\n    }\n\n    :root #').concat(id, "[data-scheme=light] {\n      --floating--color_background_modal: #ffffff;\n      --floating--color_icon_medium: #818c99;\n      --floating--color_text_primary: #000000;\n      --floating--color_text_secondary: #818c99;\n      --floating--button_background_color--hover: #0071F2;\n      --floating--button_background_color--focus: #0071F2;\n      --floating--button_background_color--active: #0069E1;\n    }\n\n    :root #").concat(id, "[data-scheme=dark] {\n      --floating--color_background_modal: #2c2d2e;\n      --floating--color_icon_medium: #b0b1b6;\n      --floating--color_text_primary: #e1e3e6;\n      --floating--color_text_secondary: #76787a;\n      --floating--button_background_color--hover: #097EFF;\n      --floating--button_background_color--focus: #097EFF;\n      --floating--button_background_color--active: #1385FF;\n      --floating--close_button_color_transparent--hover: hsla(0,0%,100%,.04);\n      --floating--close_button_color_transparent--active: hsla(0,0%,100%,.08);\n    }\n\n    #").concat(id, " {\n      position: fixed;\n      z-index: 99999;\n    }\n\n    #").concat(id, " iframe {\n      position: absolute;\n      opacity: 0;\n      pointer-events: none;\n      border: none;\n      color-scheme: auto;\n    }\n\n    #").concat(id, " .VkIdWebSdk__floating_button_reset_").concat(id, " {\n      border: none;\n      margin: 0;\n      padding: 0;\n      width: auto;\n      overflow: visible;\n      background: transparent;\n      color: inherit;\n      font: inherit;\n      line-height: normal;\n      -webkit-font-smoothing: inherit;\n      -moz-osx-font-smoothing: inherit;\n      -webkit-appearance: none;\n    }\n\n    #").concat(id, " .VkIdWebSdk__floating_").concat(id, " {\n      padding: 12px;\n    }\n\n    #").concat(id, " .VkIdWebSdk__floating_container_").concat(id, " {\n      background: var(--floating--color_background_modal);\n      border-radius: 12px;\n      padding: var(--floating--contaner_padding);\n      box-shadow: var(--floating--container_box_shadow);\n      box-sizing: border-box;\n    }\n\n    #").concat(id, " .VkIdWebSdk__floating_header_").concat(id, " {\n      display: flex;\n      align-items: center;\n      position: relative;\n      padding: 2px 0;\n    }\n\n    #").concat(id, " .VkIdWebSdk__floating_appName_").concat(id, " {\n      font-family: var(--floating--font_family);\n      font-weight: 400;\n      font-size: 13px;\n      line-height: 16px;\n      color: var(--floating--color_text_secondary);\n    }\n\n    #").concat(id, " .VkIdWebSdk__floating_close_").concat(id, " {\n      position: absolute;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      top: -4px;\n      right: -4px;\n      height: 28px;\n      width: 28px;\n      color: var(--floating--color_icon_medium);\n    }\n\n    #").concat(id, " .VkIdWebSdk__floating_close_btn_").concat(id, " {\n      width: 28px;\n      height: 28px;\n      border-radius: 50%;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      transition: .15s;\n    }\n\n    #").concat(id, " .VkIdWebSdk__floating_close_btn_").concat(id, ":hover {\n      cursor: pointer;\n      background: var(--floating--close_button_color_transparent--hover);\n    }\n\n    #").concat(id, " .VkIdWebSdk__floating_close_btn_").concat(id, ":active {\n      background: var(--floating--close_button_color_transparent--active);\n    }\n\n    #").concat(id, " .VkIdWebSdk__floating_content_").concat(id, " {\n      padding: 36px 32px;\n      text-align: center;\n      font-family: var(--floating--font_family);\n    }\n\n    #").concat(id, " .VkIdWebSdk__floating_title_").concat(id, " {\n      color: var(--floating--color_text_primary);\n      font-weight: 500;\n      font-size: 20px;\n      line-height: 24px;\n    }\n\n    #").concat(id, " .VkIdWebSdk__floating_description_").concat(id, " {\n      color: var(--floating--color_text_secondary);\n      font-weight: 400;\n      font-size: 15px;\n      line-height: 20px;\n      margin-top: 8px;\n    }\n\n    #").concat(id, " .VkIdWebSdk__floating_button_").concat(id, " {\n      height: 36px;\n      width: 100%;\n      border-radius: 8px;\n      color: var(--floating--button_text_color);\n      transition: .15s;\n      cursor: pointer;\n      background: var(--floating--button_background_color);\n    }\n\n    #").concat(id, " .VkIdWebSdk__floating_button_").concat(id, ":hover {\n      background: var(--floating--button_background_color--hover);\n    }\n\n    #").concat(id, " .VkIdWebSdk__floating_button_").concat(id, ":focus {\n      background: var(--floating--button_background_color--focus);\n    }\n\n    #").concat(id, " .VkIdWebSdk__floating_button_").concat(id, ":active {\n      background: var(--floating--button_background_color--active);\n    }\n\n    #").concat(id, " .VkIdWebSdk__floating_button_content_").concat(id, " {\n     display: flex;\n     justify-content: center;\n     align-items: center;\n     padding: 0 6px;\n    }\n\n    #").concat(id, " .VkIdWebSdk__floating_button_logo_").concat(id, ",\n    #").concat(id, " .VkIdWebSdk__floating_button_spinner_").concat(id, " {\n      display: inline-flex;\n    }\n\n    #").concat(id, " .VkIdWebSdk__floating_button_spinner_").concat(id, " {\n      width: 24px;\n      animation: vkIdSdkButtonSpinner 0.7s linear infinite;\n    }\n\n    #").concat(id, " .VkIdWebSdk__floating_button_text_").concat(id, " {\n      font-weight: 500;\n      line-height: 20px;\n      font-family: var(--floating--font_family);\n      font-size: 15px;\n      transition: .5s;\n      min-width: max-content;\n      margin-left: 6px;\n      text-align: center;\n    }\n\n    #").concat(id, " .VkIdWebSdk__oauthList_container_").concat(id, " {\n      margin-top: 16px;\n    }\n\n    #").concat(id, "[data-state=loaded] iframe {\n      position: initial;\n      opacity: 100;\n      pointer-events: all;\n    }\n\n    #").concat(id, "[data-state=loaded] .VkIdWebSdk__floating_").concat(id, " {\n      display: none;\n    }\n\n    #").concat(id, "[data-state=not_loaded] .VkIdWebSdk__floating_button_spinner_").concat(id, " {\n      transition: .2s;\n      opacity: 0;\n      pointer-events: none;\n      width: 0;\n    }\n\n    #").concat(id, "[data-state=loading] .VkIdWebSdk__floating_button_text_").concat(id, " {\n      flex: 1;\n    }\n\n    @media (max-width: 480px) {\n      #").concat(id, " {\n        display: flex;\n        align-items: flex-end;\n        left: 0;\n        right: 0;\n        bottom: ").concat(getIndent(indent.bottom), "px;\n        width: 100%;\n        height: 340px;\n      }\n    }\n    @media (min-width: 481px) {\n      #").concat(id, " {\n        top: ").concat(getIndent(indent.top), "px;\n        right: ").concat(getIndent(indent.right), 'px;\n        width: 384px;\n        height: 360px;\n      }\n    }\n\n    @keyframes vkIdSdkButtonSpinner {\n      0% {\n        transform: rotate(0deg);\n      }\n      100% {\n        transform: rotate(360deg);\n      }\n    }\n  </style>\n  <iframe width="100%" height="100%" />\n</div>\n  ');
      };
  };

  function _assert_this_initialized(self) {
      if (self === void 0) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
  }
  function _class_call_check(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
      }
  }
  function _defineProperties(target, props) {
      for(var i = 0; i < props.length; i++){
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor) descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
      }
  }
  function _create_class(Constructor, protoProps, staticProps) {
      if (protoProps) _defineProperties(Constructor.prototype, protoProps);
      if (staticProps) _defineProperties(Constructor, staticProps);
      return Constructor;
  }
  function _define_property(obj, key, value) {
      if (key in obj) {
          Object.defineProperty(obj, key, {
              value: value,
              enumerable: true,
              configurable: true,
              writable: true
          });
      } else {
          obj[key] = value;
      }
      return obj;
  }
  function _get(target, property, receiver) {
      if (typeof Reflect !== "undefined" && Reflect.get) {
          _get = Reflect.get;
      } else {
          _get = function get(target, property, receiver) {
              var base = _super_prop_base(target, property);
              if (!base) return;
              var desc = Object.getOwnPropertyDescriptor(base, property);
              if (desc.get) {
                  return desc.get.call(receiver || target);
              }
              return desc.value;
          };
      }
      return _get(target, property, receiver || target);
  }
  function _get_prototype_of(o) {
      _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o) {
          return o.__proto__ || Object.getPrototypeOf(o);
      };
      return _get_prototype_of(o);
  }
  function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
              value: subClass,
              writable: true,
              configurable: true
          }
      });
      if (superClass) _set_prototype_of(subClass, superClass);
  }
  function _object_spread(target) {
      for(var i = 1; i < arguments.length; i++){
          var source = arguments[i] != null ? arguments[i] : {};
          var ownKeys = Object.keys(source);
          if (typeof Object.getOwnPropertySymbols === "function") {
              ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                  return Object.getOwnPropertyDescriptor(source, sym).enumerable;
              }));
          }
          ownKeys.forEach(function(key) {
              _define_property(target, key, source[key]);
          });
      }
      return target;
  }
  function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
          var symbols = Object.getOwnPropertySymbols(object);
          if (enumerableOnly) {
              symbols = symbols.filter(function(sym) {
                  return Object.getOwnPropertyDescriptor(object, sym).enumerable;
              });
          }
          keys.push.apply(keys, symbols);
      }
      return keys;
  }
  function _object_spread_props(target, source) {
      source = source != null ? source : {};
      if (Object.getOwnPropertyDescriptors) {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
      } else {
          ownKeys(Object(source)).forEach(function(key) {
              Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
          });
      }
      return target;
  }
  function _possible_constructor_return(self, call) {
      if (call && (_type_of(call) === "object" || typeof call === "function")) {
          return call;
      }
      return _assert_this_initialized(self);
  }
  function _set_prototype_of(o, p) {
      _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o, p) {
          o.__proto__ = p;
          return o;
      };
      return _set_prototype_of(o, p);
  }
  function _super_prop_base(object, property) {
      while(!Object.prototype.hasOwnProperty.call(object, property)){
          object = _get_prototype_of(object);
          if (object === null) break;
      }
      return object;
  }
  function _type_of(obj) {
      "@swc/helpers - typeof";
      return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
  }
  function _is_native_reflect_construct() {
      if (typeof Reflect === "undefined" || !Reflect.construct) return false;
      if (Reflect.construct.sham) return false;
      if (typeof Proxy === "function") return true;
      try {
          Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
          return true;
      } catch (e) {
          return false;
      }
  }
  function _create_super(Derived) {
      var hasNativeReflectConstruct = _is_native_reflect_construct();
      return function _createSuperInternal() {
          var Super = _get_prototype_of(Derived), result;
          if (hasNativeReflectConstruct) {
              var NewTarget = _get_prototype_of(this).constructor;
              result = Reflect.construct(Super, arguments, NewTarget);
          } else {
              result = Super.apply(this, arguments);
          }
          return _possible_constructor_return(this, result);
      };
  }
  function _ts_decorate(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
      else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
      return c > 3 && r && Object.defineProperty(target, key, r), r;
  }
  var defaultIndent = {
      top: 12,
      right: 12,
      bottom: 12
  };
  var FloatingOneTap = /*#__PURE__*/ function(Widget) {
      _inherits(FloatingOneTap, Widget);
      var _super = _create_super(FloatingOneTap);
      function FloatingOneTap() {
          _class_call_check(this, FloatingOneTap);
          var _this;
          _this = _super.apply(this, arguments);
          _define_property(_assert_this_initialized(_this), "vkidAppName", "floating_one_tap_auth");
          return _this;
      }
      _create_class(FloatingOneTap, [
          {
              key: "onBridgeMessageHandler",
              value: function onBridgeMessageHandler(event) {
                  var _this = this;
                  switch(event.handler){
                      case FloatingOneTapInternalEvents.LOGIN_SUCCESS:
                          {
                              this.redirectWithPayload(event.params);
                              break;
                          }
                      case FloatingOneTapInternalEvents.SHOW_FULL_AUTH:
                          {
                              var params = {};
                              if (event.params.screen) {
                                  params.screen = event.params.screen;
                              }
                              if (event.params.sdk_oauth) {
                                  params.action = {
                                      name: "sdk_oauth",
                                      params: {
                                          oauth: event.params.sdk_oauth
                                      }
                                  };
                              }
                              this.openFullAuth(params);
                              break;
                          }
                      case FloatingOneTapInternalEvents.NOT_AUTHORIZED:
                          {
                              this.setState(WidgetState.NOT_LOADED);
                              setTimeout(function() {
                                  // Ожидает выполнение анимации и меняет ui
                                  _this.setState(WidgetState.LOADED);
                              }, 500);
                              clearTimeout(this.timeoutTimer);
                              break;
                          }
                      case FloatingOneTapInternalEvents.SHOW_AGREEMENTS_DIALOG:
                          {
                              this.createAgreementsDialogWidget();
                              break;
                          }
                      default:
                          {
                              _get(_get_prototype_of(FloatingOneTap.prototype), "onBridgeMessageHandler", this).call(this, event);
                              break;
                          }
                  }
              }
          },
          {
              key: "createAgreementsDialogWidget",
              value: function createAgreementsDialogWidget() {
                  var _this = this;
                  var params = {
                      container: document.body,
                      lang: this.lang,
                      scheme: this.scheme
                  };
                  var agreementsDialog = new AgreementsDialog();
                  var acceptHandler = function(event) {
                      _this.bridge.sendMessage({
                          handler: FloatingOneTapInternalEvents.START_AUTHORIZE,
                          params: event.params
                      });
                      agreementsDialog.off(AgreementsDialogInternalEvents.ACCEPT, acceptHandler);
                      agreementsDialog.close();
                  };
                  agreementsDialog.on(AgreementsDialogInternalEvents.ACCEPT, acceptHandler);
                  agreementsDialog.render(params);
              }
          },
          {
              key: "openFullAuth",
              value: function openFullAuth(value) {
                  var params = _object_spread_props(_object_spread({}, value), {
                      lang: this.lang,
                      scheme: this.scheme
                  });
                  FloatingOneTap.__auth.login(params);
              }
          },
          {
              key: "renderOAuthList",
              value: function renderOAuthList(params) {
                  if (!params.oauthList.length) {
                      return;
                  }
                  var oauthList = new OAuthList();
                  oauthList.render(params);
              }
          },
          {
              key: "render",
              value: function render(params) {
                  var _params, _params1, _params2, _params3;
                  this.lang = ((_params = params) === null || _params === void 0 ? void 0 : _params.lang) || exports.Languages.RUS;
                  this.scheme = ((_params1 = params) === null || _params1 === void 0 ? void 0 : _params1.scheme) || exports.Scheme.LIGHT;
                  var providers = (params.oauthList || []).filter(function(provider) {
                      return provider !== exports.OAuthName.VK;
                  });
                  var queryParams = {
                      scheme: this.scheme,
                      lang_id: this.lang,
                      show_alternative_login: ((_params2 = params) === null || _params2 === void 0 ? void 0 : _params2.showAlternativeLogin) ? 1 : 0,
                      content_id: ((_params3 = params) === null || _params3 === void 0 ? void 0 : _params3.contentId) || exports.FloatingOneTapContentId.SIGN_IN_TO_SERVICE,
                      providers: providers.join(",")
                  };
                  this.templateRenderer = getFloatingOneTapTemplate({
                      openFullAuth: this.openFullAuth.bind(this),
                      close: this.close.bind(this),
                      scheme: this.scheme,
                      lang: this.lang,
                      indent: Object.assign(defaultIndent, params.indent || {}),
                      contentId: queryParams.content_id,
                      appName: params.appName,
                      renderOAuthList: this.renderOAuthList.bind(this),
                      providers: providers
                  });
                  return _get(_get_prototype_of(FloatingOneTap.prototype), "render", this).call(this, _object_spread({
                      container: document.body
                  }, queryParams));
              }
          }
      ]);
      return FloatingOneTap;
  }(Widget);
  _ts_decorate([
      validator({
          appName: [
              isRequired
          ]
      })
  ], FloatingOneTap.prototype, "render", null);

  var globalConfig = new Config();
  /** Export Auth */ Auth.__config = globalConfig;
  var globalAuth = new Auth();
  /** Export Core Widget */ Widget.__config = globalConfig;
  Widget.__auth = globalAuth;

  exports.Auth = globalAuth;
  exports.Config = globalConfig;
  exports.FloatingOneTap = FloatingOneTap;
  exports.OAuthList = OAuthList;
  exports.OneTap = OneTap;

}));
